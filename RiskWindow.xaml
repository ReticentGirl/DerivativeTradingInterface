<Window x:Class="qiquanui.RiskWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:qiquanui"
        xmlns:my="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:am="http://schemas.amcharts.com/charts/wpf/2009/xaml"
        Closing="Window_Closing"
        SizeChanged="Window_SizeChanged"
       
        Title="RiskWindow" Height="700.5" Width="1200" WindowStyle="None" Background="#FF120D13" Foreground="#FFB3A9B6" Opacity="0.95" BorderThickness="7" AllowsTransparency="True" Left="40" Top="20" HorizontalAlignment="Left" VerticalAlignment="Top" MinWidth="1200" MinHeight="700.5" ResizeMode="CanResizeWithGrip">
    <Window.Resources>


        <!--grid1-->

        <Storyboard x:Key="Grid1Animate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF221D27"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF2C2632"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Grid1Animate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF2C2632"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF221D27"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--grid2-->

        <Storyboard x:Key="Grid2Animate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid2">
                <EasingColorKeyFrame KeyTime="0" Value="#FF221D27"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF2C2632"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Grid2Animate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid2">
                <EasingColorKeyFrame KeyTime="0" Value="#FF2C2632"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF221D27"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <!--grid1label1-->

        <Storyboard x:Key="Grid1Label1Animate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Label.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid1Label1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF0A080C"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF050406"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Grid1Label1Animate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Label.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid1Label1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF050406"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0A080C"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--grid2label1-->

        <Storyboard x:Key="Grid2Label1Animate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Label.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid2Label1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF0A080C"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF050406"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Grid2Label1Animate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Label.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid2Label1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF050406"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0A080C"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>


        <!--compoGrid-->

        <Storyboard x:Key="compoGridAnimate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="compoGrid">
                <EasingColorKeyFrame KeyTime="0" Value="#FF35313C"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF48444F"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="compoGridAnimate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="compoGrid">
                <EasingColorKeyFrame KeyTime="0" Value="#FF48444F"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF35313C"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>


        <!--DeltaTabGrid-->

        <Storyboard x:Key="DeltaTabGridAnimate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="DeltaTabGrid">
                <EasingColorKeyFrame KeyTime="0" Value="#FF08070A"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF020102"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="DeltaTabGridAnimate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="DeltaTabGrid">
                <EasingColorKeyFrame KeyTime="0" Value="#FF020102"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF08070A"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>


        <!--GammaTabGrid-->

        <Storyboard x:Key="GammaTabGridAnimate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="GammaTabGrid">
                <EasingColorKeyFrame KeyTime="0" Value="#FF08070A"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF020102"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="GammaTabGridAnimate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="GammaTabGrid">
                <EasingColorKeyFrame KeyTime="0" Value="#FF020102"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF08070A"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>



        <Style x:Key="minSty" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="ImgBtnBg3" Source="Resources/min.png" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\min_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\min_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\min_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--groupCanvas-->

        <Style x:Key="normalSty" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\normal.png" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\normal_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\normal_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\normal_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="maxSty" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="ImgBtnBg3" Source="Resources/max.png" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\max_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\max_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\max_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="closeSty" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="ImgBtnBg3" Source="Resources/close.png" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\close_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\close_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\close_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--combobox样式-->
        <!--下拉框样式-->
        <Style x:Key="ComboBoxFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0"/>
            <GradientStop Color="Transparent" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF51485F"/>
        <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
        <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" x:Name="Chrome"  BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"  SnapsToDevicePixels="true">
                            <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="#808080" HorizontalAlignment="Center" Margin="1,1,0,0" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
            <GradientStop Color="#FF605772" Offset="0.05"/>

            <GradientStop Color="#FF433A49" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="FocusStyle">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Stroke="#FFA091B6" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Foreground="White"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Border
      x:Name="Border" 
      Grid.ColumnSpan="2"
      CornerRadius="2"
      Background="{DynamicResource ButtonNormalBorder}"
      BorderBrush="White"
      BorderThickness="1" />

                            <my:ButtonChrome x:Name="Chrome" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
                            </my:ButtonChrome>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Arrow" Value="#FF5B516A"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF423F49"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="White"/>

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="Placement" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <my:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
                        <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </my:SystemDropShadowChrome>
                </Popup>
                <my:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsDropDownOpen" Value="true">
                    <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    <Setter Property="Background" Value="#FFF4F4F4"/>
                </Trigger>
                <Trigger Property="IsGrouping" Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="CboCommomStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>

            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="4,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true" Margin="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Border x:Name="Shdw" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                    <Border x:Name="DropDownBorder" BorderBrush="#FF423D4F" BorderThickness="1" Background="#FF8977B0">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" Fill="#FF18141F"/>
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Border>
                            </Popup>
                            <ToggleButton Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FF303240"/>
                            <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>

                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" Value="#FF272935"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                <Setter Property="Background" Value="#FFF4F4F4"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#FF433F49"/>
                                <Setter Property="BorderBrush" Value="White"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#FF433E4D"/>
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="darkButton" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <!--背景色-->
                        <Border x:Name="back" Opacity="0.8" CornerRadius="3">
                            <Border.BitmapEffect>
                                <OuterGlowBitmapEffect Opacity="0.7" GlowSize="0" GlowColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" />
                            </Border.BitmapEffect>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1.5">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0"/>
                                            <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0.4"/>
                                            <GradientStop Color="#FFF" Offset="1"/>
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <!--前景色及边框-->
                            <Border x:Name="fore" BorderThickness="1" CornerRadius="3" BorderBrush="#5555">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#6FFF" Offset="0.5"/>
                                                <GradientStop Color="#118B8484" Offset="0.51"/>
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <!--按钮内容-->
                                <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding  Content}">
                                    <ContentPresenter.BitmapEffect>
                                        <DropShadowBitmapEffect Color="#000" Direction="-90" ShadowDepth="2" Softness="0.1" Opacity="0.3" />
                                    </ContentPresenter.BitmapEffect>
                                </ContentPresenter>
                            </Border>
                        </Border>
                        <!--触发器-->
                        <ControlTemplate.Triggers>
                            <!--鼠标移入移出-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="6" Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <ColorAnimation To="#AFFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation To="#3FFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--按钮按下弹起-->
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="3" Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <ColorAnimation To="#3AAA" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation To="#2111" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--按钮失效-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#B444"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <DoubleAnimation To="1" Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)" />
                                            <DoubleAnimation To="-135" Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)" />
                                            <ColorAnimation To="#FFF" Duration="0:0:0.3" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)" />
                                            <ColorAnimation To="#D555" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                            <ColorAnimation To="#CEEE" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation To="#CDDD" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)" />
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border" Background="#FF0F1017"  BorderThickness="0" CornerRadius="0,0,0,0">
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF08070A" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF876A8F" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="0,3,0,0"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF383244"/>


                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="scrollTop" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <StackPanel Orientation="Horizontal" Height="17" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\scroll_top.png" Margin="0" Width="17" Height="17" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\scroll_top_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\scroll_top_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\scroll_top_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="scrollButtom" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <StackPanel Orientation="Horizontal" Height="17" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\scroll_Buttom.png" Margin="0" Width="17" Height="17" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\scroll_Buttom_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\scroll_Buttom_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\scroll_Buttom_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="scrollThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Rectangle Width="12" Fill="#FF242530" RadiusX="7" RadiusY="7">
                        </Rectangle>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>



        <Style x:Key="scrollBackground" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="Transparent">
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Simple ScrollBar  它使用了 SimpleThumb、SimpleRepeatButton 和 SimpleScrollRepeatButton -->

        <Style x:Key="SimpleScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="#FF101017
"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="Auto" >
                            <!--Width:{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}};-->
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="18"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="18"/>
                            </Grid.RowDefinitions>

                            <RepeatButton x:Name="DecreaseRepeat" Style="{StaticResource scrollTop}" Command="ScrollBar.LineUpCommand" Margin="0" Grid.RowSpan="1">

                            </RepeatButton>

                            <!-- Track 是一种特殊的布局容器，可调整用于在其一侧执行跳转滚动的 thumb 和 repeat button 的大小 -->
                            <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource scrollThumb}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Style="{StaticResource scrollBackground}" Command="ScrollBar.PageDownCommand"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Style="{StaticResource scrollBackground}" Command="ScrollBar.PageUpCommand"/>
                                </Track.DecreaseRepeatButton>
                            </Track>

                            <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Style="{StaticResource scrollButtom}" Command="ScrollBar.LineDownCommand">
                                <Grid>
                                    <Path x:Name="IncreaseArrow" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                </Grid>
                            </RepeatButton>
                        </Grid>

                        <!-- 它对 ScrollBar 使用一个模板，并将其旋转为“水平”
                    它还会更改命令，使其执行“向左”和“向右”命令，而不是执行“向上”和“向下”命令 -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Horizontal">

                                <!-- 将 ScrollBar 从“垂直”旋转为“水平” -->
                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>

                                <!-- Track 在内部绑定到“方向”，因此我们需要将其旋转回“垂直” -->
                                <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>

                                <!-- 更改命令，以执行“水平”命令 -->
                                <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat"/>
                                <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat"/>
                                <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown"/>
                                <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Simple ScrollViewer 
    ScrollViewer 是 Grid 控件，该控件包含 ContentPresenter 以及 Horizontal 和 Vertical ScrollBar 
    它可供 ListBox、MenuItem、ComboBox 和 TreeView 使用 -->
        <Style x:Key="SimpleScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}"/>

                            <!-- ScrollBars 的可见性通过控件的实现来控制 -->
                            <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" />
                            <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--listview的样式{x:Static GridView.GridViewScrollViewerStyleKey}-->




        <Style x:Key="GridViewScrollViewerStyle"
       TargetType="ScrollViewer">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <DockPanel Margin="{TemplateBinding Padding}">
                                <ScrollViewer DockPanel.Dock="Top"
              HorizontalScrollBarVisibility="Hidden"
              VerticalScrollBarVisibility="Hidden"
              Focusable="false" Style="{StaticResource SimpleScrollViewer}"
>
                                    <GridViewHeaderRowPresenter Margin="2,0,2,0"
                Columns="{Binding Path=TemplatedParent.View.Columns,
                          RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderContainerStyle="{Binding
                             Path=TemplatedParent.View.ColumnHeaderContainerStyle,
                             RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderTemplate="{Binding
                             Path=TemplatedParent.View.ColumnHeaderTemplate,
                             RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderTemplateSelector="{Binding 
                             Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
                             RelativeSource={RelativeSource TemplatedParent}}"
                AllowsColumnReorder="{Binding
                             Path=TemplatedParent.View.AllowsColumnReorder,
                             RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderContextMenu="{Binding
                             Path=TemplatedParent.View.ColumnHeaderContextMenu,
                             RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderToolTip="{Binding
                             Path=TemplatedParent.View.ColumnHeaderToolTip,
                             RelativeSource={RelativeSource TemplatedParent}}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>

                                <ScrollContentPresenter Name="PART_ScrollContentPresenter"
              KeyboardNavigation.DirectionalNavigation="Local"
              CanContentScroll="True" CanHorizontallyScroll="False" 
              CanVerticallyScroll="False"/>
                            </DockPanel>

                            <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Value="{TemplateBinding HorizontalOffset}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Style="{StaticResource SimpleScrollBar}"/>

                            <ScrollBar Name="PART_VerticalScrollBar"
            Grid.Column="1"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Value="{TemplateBinding VerticalOffset}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                     Style="{StaticResource SimpleScrollBar}"  />

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
            <Setter Property="Width" Value="18"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}"
          Background="Transparent">
                            <Rectangle HorizontalAlignment="Center"
            Width="1"
            Fill="{TemplateBinding Background}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListViewStyle" TargetType="ListView">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border x:Name="Bd" CornerRadius="0,0,0,0" BorderBrush="#FF574E59" Background="{DynamicResource ControlBackgroundBrush}" BorderThickness="0,1,0,0.5">
                            <ScrollViewer Style="{StaticResource GridViewScrollViewerStyle}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping"
                   Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false"/>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                   Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Stroke="#FFC0C4DA" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="tmpForThumb" TargetType="{x:Type Thumb}">
            <Border>
                <Rectangle Width="1" Name="rec">
                    <Rectangle.Fill>
                        <LinearGradientBrush StartPoint="0.5,0.3" EndPoint="1,1" Opacity="0.2">
                            <GradientStop Color="#FF939BCB"/>
                            <GradientStop Color="Transparent" Offset="1"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="rec" Property="Fill" Value="#FF767EA8"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <Style  TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid Name="g">
                            <Grid.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" Opacity="0.2">
                                    <GradientStop Color="Transparent"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <Border Name="bd" Padding="{TemplateBinding Padding}">
                                <ContentPresenter Margin="0,5"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <Thumb Name="PART_HeaderGripper" Template="{StaticResource tmpForThumb}" HorizontalAlignment="Right" Margin="0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="g" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" Opacity="0.2">
                                            <GradientStop Color="White" Offset="0" />

                                            <GradientStop Color="Transparent" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--数据源-->

        <!--ListViewItem的样式-->
        <Style TargetType="{x:Type ListViewItem}">
            <Style.Setters>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="bd"  
                               BorderThickness="0,0,0,0.5"  
                                Padding="{TemplateBinding Padding}"  
                               SnapsToDevicePixels="True" BorderBrush="#FF414559">
                                <GridViewRowPresenter HorizontalAlignment="Center"  
                                                  Margin="0,5"/>
                            </Border>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsSelected" Value="True">
                                    <Trigger.Setters>

                                        <Setter TargetName="bd" Property="Background">
                                            <Setter.Value>
                                                <SolidColorBrush Color="Black" Opacity="0.5"/>
                                            </Setter.Value>
                                        </Setter>


                                    </Trigger.Setters>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.Setters>
                                        <Setter TargetName="bd" Property="Background">
                                            <Setter.Value>
                                                <SolidColorBrush Color="#FF1B1C21" Opacity="0.5"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>

        <Style x:Key="textboxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF2E3143"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="SelectionBrush" Value="#FF3E414D"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border 
          Name="Border"
          CornerRadius="0" 
          Padding="2"
          BorderBrush="#FF362E43"
          BorderThickness="1" >
                            <Border.Background>
                                <SolidColorBrush Color="Transparent" Opacity="0"/>
                            </Border.Background>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                <Setter TargetName="Border" Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF2D253A" Opacity="0.5"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF8F889B" Opacity="0.5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF362E43"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FFA667B7"/>
                                <Setter Property="Foreground" Value="#FF978AA9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <!--checkbox样式-->



        <!-- 
  CheckBox的样式 
-->
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="#FF787B8E"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator FlowDirection="LeftToRight" VerticalAlignment="Center">
                            <BulletDecorator.Bullet>
                                <Border x:Name="bd"  
                               BorderThickness="1"  
                                BorderBrush="#FF504B5B"  
                                MinHeight="15"  
                                MinWidth="15"  
                               VerticalAlignment="Center">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0"  
                                      EndPoint="0,1">
                                            <GradientStop Color="#FF0F111B" Offset="0"/>
                                            <GradientStop Color="#FF0C0E16" Offset="1"/>

                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Path x:Name="cp" Width="12" Height="12"  
                        Stroke="#FF007ACC"  
                             StrokeThickness="1"/>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="2,0"/>
                        </BulletDecorator>
                        <!-- 
                    控件触发器 
                -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <!-- 画上一个勾 -->
                                <Setter TargetName="cp" Property="Data"  
          Value="M 0,6 L 6,12 12,0"/>
                                <Setter Property="Foreground" Value="#FF007ACC"/>
                                <Setter TargetName="bd" Property="BorderBrush" Value="#FF007ACC"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#FF2E3347" Offset="0"/>
                                            <GradientStop Color="#FF24283A" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="bd" Property="BorderBrush" Value="#FFA6A9BB"/>
                            </Trigger>




                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!---->
    </Window.Resources>
    <Window.Effect>
        <DropShadowEffect BlurRadius="7" Color="#FF3F00C5" Direction="270" Opacity="0.75" ShadowDepth="3"/>
    </Window.Effect>
    <Grid>
    	<Grid.RowDefinitions>
    		<RowDefinition/>
    	</Grid.RowDefinitions>
        <Frame x:Name="Top1_StrategyLab" Content="" HorizontalAlignment="Left" Height="38" VerticalAlignment="Top" Width="1186" Background="Transparent" MouseDown="Top1_MouseDown" MouseDoubleClick="Top1_MouseDoubleClick"/>

        <Border x:Name="Border1" BorderBrush="#FFAE6BBF" BorderThickness="1"  VerticalAlignment="Top" Panel.ZIndex="10" HorizontalAlignment="Left" >
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Border.RenderTransform>
        </Border>
        <Button x:Name="minButton" Margin="0,11,51,0" Click="MinButton_Click_1" Focusable="False" Height="12" Width="15" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource minSty}">
            <Button.Background>
                <ImageBrush ImageSource="Resources/min.png"/>
            </Button.Background>
        </Button>
        <Button x:Name="maxButton" Margin="0,12,31,0" Click="MaxButton_Click_1" Focusable="False" Height="12" Width="15" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource maxSty}">
            <Button.Background>
                <ImageBrush ImageSource="Resources/max.png"/>
            </Button.Background>
        </Button>
        <Button x:Name="closeButton" Margin="0,11,10,0" Click="CloseButton_Click_1" Focusable="False" Height="12" Width="15" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource closeSty}">
            <Button.Background>
                <ImageBrush ImageSource="Resources/close.png"/>
            </Button.Background>
        </Button>

        <!--组合-->
        <Grid x:Name="Grid1" Margin="10,43,0,0" Background="#FF221D27" HorizontalAlignment="Left" VerticalAlignment="Top" Width="788" Height="282" MouseEnter="Grid1_MouseEnter" MouseLeave="Grid1_MouseLeave">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="151*"/>
                <ColumnDefinition Width="637*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="119*"/>
                <RowDefinition Height="158*"/>
            </Grid.RowDefinitions>
            <!--设置单元格背景色-->
            <Label x:Name="Grid1Label1" Grid.Column="0" Grid.RowSpan="2" Background="#FF0A080C" MouseEnter="Grid1Label1_MouseEnter" MouseLeave="Grid1Label1_MouseLeave" />

            <TextBlock x:Name="confidenceLevelCompoTB" Text="置信水平：" Grid.Column="0" Margin="16,9,0,133" VerticalAlignment="Center" Height="16" Grid.Row="1" Foreground="White"/>
            <TextBox x:Name="setConfidenceLevelCompoTBox" Grid.Column="0" Margin="76,5,25,129" VerticalAlignment="Center" Grid.Row="1" Style="{StaticResource textboxStyle}" Foreground="White"/>
            <Button x:Name="okCompoBtn"  Content="确定" Grid.Column="0" VerticalAlignment="Center" Margin="42,35,41,103" Grid.Row="1" Height="20" Style="{StaticResource darkButton}" Background="#FF363338" BorderBrush="{x:Null}" Click="okCompoBtn_Click"/>

            <TextBlock Text="组合希腊字母值及VaR值：" Grid.Column="1" Grid.Row="0" Margin="9.8,10,480.8,90.8" Foreground="White"/>
            <Grid x:Name="compoGrid" Grid.Column="1" Grid.Row="0" Margin="50,33,40,30" MouseEnter="compoGrid_MouseEnter" MouseLeave="compoGrid_MouseLeave">
                <Grid.Background>
                    <SolidColorBrush Color="#FF35313C" Opacity="0.7"/>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock x:Name="deltaCompoGTB" Text="Delta" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                <Border BorderBrush="#FF4F4857" BorderThickness="2,2,0,1" Grid.Column="0" Grid.Row="0" />
                <TextBlock x:Name="gammaCompoGTB" Text="Gamma" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                <Border BorderBrush="#FF4F4857" BorderThickness="1,2,0,1" Grid.Column="1" Grid.Row="0" />
                <TextBlock x:Name="thetaCompoGTB" Text="Theta" Grid.Column="2" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                <Border BorderBrush="#FF4F4857" BorderThickness="1,2,0,1" Grid.Column="2" Grid.Row="0" Height="29" VerticalAlignment="Top" />
                <TextBlock x:Name="vegaCompoGTB" Text="Vega" Grid.Column="3" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                <Border BorderBrush="#FF4F4857" BorderThickness="1,2,0,1" Grid.Column="3" Grid.Row="0" />
                <TextBlock x:Name="rhoCompoGTB" Text="Rho" Grid.Column="4" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                <Border BorderBrush="#FF4F4857" BorderThickness="1,2,0,1" Grid.Column="4" Grid.Row="0" />
                <Border BorderBrush="#FF4F4857" BorderThickness="1,2,2,1" Grid.Column="5" Grid.Row="0" />
                <TextBlock x:Name="varCompoGTB" Text="Var" Grid.Column="5" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                <Border BorderBrush="#FF4F4857" BorderThickness="2,0,0,2" Grid.Column="0" Grid.Row="1" />
                <Border BorderBrush="#FF4F4857" BorderThickness="1,0,0,2" Grid.Column="1" Grid.Row="1" />
                <Border BorderBrush="#FF4F4857" BorderThickness="1,0,0,2" Grid.Column="2" Margin="1,0,0,0" Grid.Row="1" />
                <Border BorderBrush="#FF4F4857" BorderThickness="1,0,0,2" Grid.Column="3" Grid.Row="1" />
                <Border BorderBrush="#FF4F4857" BorderThickness="1,0,0,2" Grid.Column="4" Grid.Row="1" />
                <Border BorderBrush="#FF4F4857" BorderThickness="1,0,0,2" Grid.Column="5" Grid.Row="1" />
                <Border BorderBrush="#FF4F4857" BorderThickness="1,0,2,2" Grid.Column="6" Grid.Row="1" />
                <TextBlock x:Name="showDeltaTB" Text="{Binding ComDelta, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock x:Name="showGammaTB" Text="{Binding ComGamma, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock x:Name="showThetaTB" Text="{Binding ComTheta, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock x:Name="showVegaTB" Text="{Binding ComVega, UpdateSourceTrigger=PropertyChanged}"  Grid.Column="3" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock x:Name="showRhoTB" Text="{Binding ComRho, UpdateSourceTrigger=PropertyChanged}" Grid.Column="4" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <!--<TextBlock x:Name="showRateTB" Text="{Binding ComDelta, UpdateSourceTrigger=PropertyChanged}" Grid.Column="5" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                <TextBlock x:Name="showVarTB" Text="{Binding ComVar, UpdateSourceTrigger=PropertyChanged}" Grid.Column="5" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>

            <ListView x:Name="optionsRiskLV" Grid.Column="1" Grid.Row="1" Style="{StaticResource ListViewStyle}" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible" Foreground="White" SelectionChanged="optionsRiskLV_SelectionChanged">
                <ListView.View>
                    <GridView>
                       
                        <GridViewColumn x:Name="instrumentIDORGVCH" Header="交易代码" DisplayMemberBinding="{Binding InstrumentID}" Width="110"/>
                        <GridViewColumn x:Name="deltaORGVCH" Header="Delta" DisplayMemberBinding="{Binding SingleDelta}" Width="60"/>
                        <GridViewColumn x:Name="gammaORGVCH" Header="Gamma" DisplayMemberBinding="{Binding SingleGamma}" Width="60"/>
                        <GridViewColumn x:Name="thetaORGVCH" Header="Theta" DisplayMemberBinding="{Binding SingleTheta}" Width="60"/>
                        <GridViewColumn x:Name="VegaORGVCH" Header="Vega" DisplayMemberBinding="{Binding SingleVega}" Width="60"/>
                        <GridViewColumn x:Name="rhoORGVCH" Header="Rho" DisplayMemberBinding="{Binding SingleRho}" Width="60"/>
                        <GridViewColumn x:Name="rateORGVCH" Header="隐波率" DisplayMemberBinding="{Binding SingleVol}" Width="60"/>
                        <GridViewColumn x:Name="varORGVCH" Header="Var" DisplayMemberBinding="{Binding SingleVar}" Width="90"/>
                    </GridView>
                </ListView.View>
            </ListView>

        </Grid>

        <!--推荐组合-->
        <Grid x:Name="Grid2" Margin="10,0,0,30" Background="#FF221D27" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="788" Height="266" MouseEnter="Grid2_MouseEnter" MouseLeave="Grid2_MouseLeave">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="151*"/>
                <ColumnDefinition Width="637*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <!--设置单元格背景色-->
            <Label x:Name="Grid2Label1" Grid.Column="0" Grid.RowSpan="2" Background="#FF0A080C" MouseEnter="Grid2Label1_MouseEnter" MouseLeave="Grid2Label1_MouseLeave" />

            <TextBlock x:Name="confidenceLevelRecomTB" Text="置信水平：" Grid.Column="0" Grid.RowSpan="2" Margin="16,0,0,0" VerticalAlignment="Center" Foreground="White"/>
            <TextBox x:Name="setConfidenceLevelRecomTBox" Width="50" Grid.Column="0" Grid.RowSpan="2" Margin="50,0,0,0" VerticalAlignment="Center" Style="{StaticResource textboxStyle}" Foreground="White"/>
            <Button x:Name="okRecomBtn"  Content="确定" Grid.Column="0" VerticalAlignment="Center" Margin="43,148,40,91" Height="20" Style="{StaticResource darkButton}" Background="#FF252327" BorderBrush="{x:Null}" Click="okRecomBtn_Click"/>

            <TextBlock x:Name="recomTB" Text="基于VaR值的最优对冲策略：" Grid.Column="1" Grid.Row="0" Margin="10,10,472,238" Foreground="White"/>
            <ListView x:Name="recomLV" Grid.Column="1" Grid.Row="0" Margin="0,43,0,36" Style="{StaticResource ListViewStyle}" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible" Foreground="White">
                <ListView.View>
                    <GridView>
                        <GridViewColumn x:Name="ifChooseRGVCH" Header="勾选" Width="50">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox x:Name="ifChooseRCB" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="instrumentIDRGVCH" Header="交易代码" DisplayMemberBinding="{Binding InstrumentID}" Width="110"/>
                        <GridViewColumn x:Name="typeRGCH" Header="交易类型"  DisplayMemberBinding="{Binding SBuyOrSell}" Width="60"/>
                        <GridViewColumn x:Name="lotRGCH" Header="交易手数" DisplayMemberBinding="{Binding TradingNum}" Width="60">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <local:NumericUpAndDownUserControl x:Name="lotTNUAD" Width="Auto" HorizontalAlignment="Center"   Value="{Binding Path=TradingNum,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="deltaRGVCH" Header="Delta" DisplayMemberBinding="{Binding SingleDelta}" Width="60"/>
                        <GridViewColumn x:Name="gammaRGVCH" Header="Gamma" DisplayMemberBinding="{Binding SingleGamma}" Width="60"/>
                        <GridViewColumn x:Name="thetaRGVCH" Header="Theta" DisplayMemberBinding="{Binding SingleTheta}" Width="60"/>
                        <GridViewColumn x:Name="VegaRGVCH" Header="Vega" DisplayMemberBinding="{Binding SingleVega}" Width="60"/>
                        <GridViewColumn x:Name="rhoRGVCH" Header="Rho" DisplayMemberBinding="{Binding SingleRho}" Width="60"/>
                        <GridViewColumn x:Name="rateRGVCH" Header="隐波率" DisplayMemberBinding="{Binding SingleVol}" Width="60"/>
                        <GridViewColumn x:Name="varRGVCH" Header="Var" DisplayMemberBinding="{Binding SingleVar}" Width="90"/>
                    </GridView>
                </ListView.View>
            </ListView>

            <Button x:Name="placeOrderBtn" Content="下单" HorizontalAlignment="Right" Margin="0,0,21,10" VerticalAlignment="Bottom" Width="75" Background="#FF2A3044" BorderBrush="{x:Null}" Foreground="White" Height="21" Grid.Column="1" Style="{StaticResource darkButton}" Click="placeOrderBtn_Click"/>

        </Grid>


        <!--单支期权delta图、gamma图-->
        <TabControl x:Name="DeltaAndGammaTabControl" HorizontalAlignment="Right" Height="282" Margin="0,43,10,0" VerticalAlignment="Top" Width="358" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0">
            <TabItem  Header="Delta图" Style="{StaticResource TabItemStyle}" Foreground="White" Margin="-2,0,2,0">
                <Grid x:Name="DeltaTabGrid" Background="#FF08070A" Margin="-3,-2,4,2" MouseEnter="DeltaTabGrid_MouseEnter" MouseLeave="DeltaTabGrid_MouseLeave">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <am:LineChart x:Name="GammaDelta" Height="219"
                          Foreground="LightGray" BorderThickness="0" VerticalAlignment="Top" Canvas.Top="-308" BalloonForeground="#FFC9C9C9" BalloonsEnabled="True" Background="#001DB2DE" IndicatorStroke="#FF1A6E95" IsIndicatorEnabled="True" IsZoomable="False" IndicatorBalloonForeground="#FFDEDEDE" PlotAreaMargin="0,0,0,0" PlotAreaBackground="{x:Null}" ScrollerLocation="Bottom" ScrollBarVisibilty="Visible" SelectionMode="Extended" VerticalLinesClustered="True" ZoomOutButtonHoverForeground="#FF5EB1E0" ZoomOutButtonMargin="0" ZoomOutButtonForeground="#FF249DE2" LegendEnabled="False" HorizontalAlignment="Left" Width="301" Margin="29,10,0,0">
                        <am:LineChart.Legend>
                            <am:Legend HorizontalAlignment="Left" HorizontalContentAlignment="Left" 
							IsGraphTogglingEnabled="True" ValuesEnabled="True"/>
                        </am:LineChart.Legend>

                        <am:LineChart.LeftValueAxis>
                            <am:ValueAxis StrokeThickness="0" />
                        </am:LineChart.LeftValueAxis>

                        <am:LineChart.CategoryAxis>
                            <am:CategoryAxis StrokeThickness="0" />
                        </am:LineChart.CategoryAxis>

                        <am:LineChart.LeftValueAxisGrid>
                            <am:ValueGrid Stroke="#08FFFFFF" />
                        </am:LineChart.LeftValueAxisGrid>

                        <am:LineChart.CategoryAxisGrid>
                            <am:CategoryGrid Stroke="#08FFFFFF" />
                        </am:LineChart.CategoryAxisGrid>
                        <am:LineChart.Content >
                            <Grid Width="640" Height="420">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                            </Grid>
                        </am:LineChart.Content>
                        <!--<am:LineChart.Graphs >
                    <am:LineChartGraph Name="VolatilityGraph" Height="184" Width="312" Brush="White" AreaFillOpacity="0.5" BulletType="None" IsFilled="True" AreaFill="Blue"  />
                </am:LineChart.Graphs>-->
                        <!--<am:LineChartGraph x:Name="GammaDeltaTemp1" AreaFillOpacity="1" BalloonBackground="sc#1, 0.4452012, 0.08650046, 0.0202885624" BulletType="None" Brush="#00000000" Height="72" IsFilled="True" Width="237"/>
                        <am:LineChartGraph x:Name="GammaDeltaTemp2" AreaFillOpacity="1" BalloonBackground="sc#1, 0.4452012, 0.08650046, 0.0202885624" BulletType="None" Brush="#00D7D7EE" Height="72" IsFilled="True" Width="237"/>-->

                        <!--</am:LineChart>-->

                    </am:LineChart> 
                    <Label Content="" Background="#FF08070A" Canvas.Top="-308" Margin="29,10,191,214"/>
                    <!--<Label Content="Label" Canvas.Left="246" Canvas.Top="56"/>-->
                    
                </Grid>
            </TabItem>
            <TabItem Header="Gamma图" Style="{StaticResource TabItemStyle}" Foreground="White" Margin="-2,0,2,0">
                <Grid x:Name="GammaTabGrid" Background="#FF08070A" Margin="-2,-2,8,0" MouseEnter="GammaTabGrid_MouseEnter" MouseLeave="GammaTabGrid_MouseLeave">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <am:LineChart x:Name="GammaDelta1" Height="209"
                          Foreground="LightGray" BorderThickness="0" VerticalAlignment="Top" Canvas.Top="-308" BalloonForeground="#FFC9C9C9" BalloonsEnabled="True" Background="#001DB2DE" IndicatorStroke="#FF1A6E95" IsIndicatorEnabled="True" IsZoomable="False" IndicatorBalloonForeground="#FFDEDEDE" PlotAreaMargin="0,0,0,0" PlotAreaBackground="{x:Null}" ScrollerLocation="Bottom" ScrollBarVisibilty="Visible" SelectionMode="Extended" VerticalLinesClustered="True" ZoomOutButtonHoverForeground="#FF5EB1E0" ZoomOutButtonMargin="0" ZoomOutButtonForeground="#FF249DE2" LegendEnabled="False" Width="276" HorizontalAlignment="Left" Margin="41,21,0,0">
                        <am:LineChart.Legend>
                            <am:Legend HorizontalAlignment="Left" HorizontalContentAlignment="Left" 
							IsGraphTogglingEnabled="True" ValuesEnabled="True"/>
                        </am:LineChart.Legend>

                        <am:LineChart.LeftValueAxis>
                            <am:ValueAxis StrokeThickness="0" />
                        </am:LineChart.LeftValueAxis>

                        <am:LineChart.CategoryAxis>
                            <am:CategoryAxis StrokeThickness="0" />
                        </am:LineChart.CategoryAxis>

                        <am:LineChart.LeftValueAxisGrid>
                            <am:ValueGrid Stroke="#08FFFFFF" />
                        </am:LineChart.LeftValueAxisGrid>

                        <am:LineChart.CategoryAxisGrid>
                            <am:CategoryGrid Stroke="#08FFFFFF" />
                        </am:LineChart.CategoryAxisGrid>
                        <am:LineChart.Content >
                            <Grid Width="640" Height="420">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                            </Grid>
                        </am:LineChart.Content>
                        <!--<am:LineChart.Graphs >
                    <am:LineChartGraph Name="VolatilityGraph" Height="184" Width="312" Brush="White" AreaFillOpacity="0.5" BulletType="None" IsFilled="True" AreaFill="Blue"  />
                </am:LineChart.Graphs>-->
                        <!--<am:LineChartGraph x:Name="GammaDeltaTemp11" AreaFillOpacity="1" BalloonBackground="sc#1, 0.4452012, 0.08650046, 0.0202885624" BulletType="None" Brush="#00000000" Height="72" IsFilled="True" Width="237"/>
                        <am:LineChartGraph x:Name="GammaDeltaTemp22" AreaFillOpacity="1" BalloonBackground="sc#1, 0.4452012, 0.08650046, 0.0202885624" BulletType="None" Brush="#00D7D7EE" Height="72" IsFilled="True" Width="237"/>-->
                       
                        <!--</am:LineChart>-->

                    </am:LineChart>
                    <Label Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="130" Background="#FF08070A" Margin="41,21,0,0" Height="24"/>
                    <!--<Label  x:Name="gougou2" Canvas.Top="-101" Width="70" Background="{x:Null}" Height="26"/>-->

                </Grid>
            </TabItem>
        </TabControl>
        <Canvas HorizontalAlignment="Left" Height="266" Margin="843,390,0,0" VerticalAlignment="Top" Width="312">
            <am:LineChart x:Name="VolatilityChart" Width="312" Height="256"
                          Foreground="LightGray" BorderThickness="0" VerticalAlignment="Bottom" Canvas.Top="10" BalloonForeground="#FFC9C9C9" BalloonsEnabled="True" Background="#001DB2DE" IndicatorStroke="#FF1A6E95" IsIndicatorEnabled="True" IsZoomable="False" IndicatorBalloonForeground="#FFDEDEDE" PlotAreaMargin="0,0,0,0" PlotAreaBackground="{x:Null}" ScrollerLocation="Bottom" ScrollBarVisibilty="Visible" SelectionMode="Extended" VerticalLinesClustered="True" ZoomOutButtonHoverForeground="#FF5EB1E0" ZoomOutButtonMargin="0" ZoomOutButtonForeground="#FF249DE2" HorizontalAlignment="Right">
					
                <am:LineChart.Legend>
                    <am:Legend HorizontalAlignment="Left" HorizontalContentAlignment="Left" 
							IsGraphTogglingEnabled="True" ValuesEnabled="True"/>
                </am:LineChart.Legend>

                <am:LineChart.LeftValueAxis>
                    <am:ValueAxis StrokeThickness="0" />
                </am:LineChart.LeftValueAxis>

                <am:LineChart.CategoryAxis>
                    <am:CategoryAxis StrokeThickness="0" />
                </am:LineChart.CategoryAxis>

                <am:LineChart.LeftValueAxisGrid>
                    <am:ValueGrid Stroke="#08FFFFFF" />
                </am:LineChart.LeftValueAxisGrid>

                <am:LineChart.CategoryAxisGrid>
                    <am:CategoryGrid Stroke="#08FFFFFF" />
                </am:LineChart.CategoryAxisGrid>
                <am:LineChart.Content >
                    <Grid Width="640" Height="420">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                    </Grid>
                </am:LineChart.Content>
                <!--<am:LineChart.Graphs >
                    <am:LineChartGraph Name="VolatilityGraph" Height="184" Width="312" Brush="White" AreaFillOpacity="0.5" BulletType="None" IsFilled="True" AreaFill="Blue"  />
                </am:LineChart.Graphs>-->
                <am:LineChartGraph x:Name="VolatilityGraphTemp1" AreaFillOpacity="1" BalloonBackground="sc#1, 0.4452012, 0.08650046, 0.0202885624" BulletType="None" Brush="#00000000" Height="22" IsFilled="True" Width="58"/>
                <am:LineChartGraph x:Name="VolatilityGraphTemp2" AreaFillOpacity="1" BalloonBackground="sc#1, 0.4452012, 0.08650046, 0.0202885624" BulletType="None" Brush="#00D7D7EE" Height="72" IsFilled="True" Width="237"/>

            <!--</am:LineChart>-->

            </am:LineChart>
            <Label Content="" Height="33" Width="135" Background="#FF120D13"/>
            <!--<Label Content="Label" Canvas.Left="246" Canvas.Top="56"/>-->
            <Label x:Name="gougou" Canvas.Top="240" Width="70" Background="#FF120D13" Height="26"/>

            
            
        </Canvas>
        <Label Content="隐含波动率图" HorizontalAlignment="Left" Margin="843,359,0,0" VerticalAlignment="Top" Foreground="White"/>

        </Grid>
</Window>
