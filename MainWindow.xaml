<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="qiquanui.MainWindow"
        xmlns:my="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms" 
        
        SizeChanged="Window_SizeChanged"
        Closing="Window_Closing"
        Title="MainWindow" BorderThickness="7" WindowStyle="None" AllowsTransparency="True" Foreground="#FF627095" Background="#FF1D1D21" ResizeMode="CanResizeWithGrip" MinWidth="974" MinHeight="650" Width="1200" Height="700.5" Opacity="0.95">
    <Window.Resources>
        <!--MouseDown="Window_MouseDown"         MouseMove=" Window_MouseMove"   MouseDoubleClick="Window_MouseDoubleClick"-->

        <!--实现鼠标经过渐变-->
        <!--grid1-->

        <Storyboard x:Key="grid1Animate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(ListView.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF292932"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value=" #FF353540"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="grid1Animate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(ListView.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid1">
                <EasingColorKeyFrame KeyTime="0" Value=" #FF353540"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF292932"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--Canvas1-->
        <Storyboard x:Key="canvas1Animate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Canvas1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF151519"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF050506"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="canvas1Animate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Canvas1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF050506"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF151519"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--Canvas2-->
        <Storyboard x:Key="canvas2Animate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Canvas2">
                <EasingColorKeyFrame KeyTime="0" Value="#FF151519"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF050506"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="canvas2Animate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Canvas2">
                <EasingColorKeyFrame KeyTime="0" Value="#FF050506"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF151519"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--Grid3-->
        <Storyboard x:Key="Grid3Animate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid3">
                <EasingColorKeyFrame KeyTime="0" Value="#FF0D0D11"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF07070A"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Grid3Animate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid3">
                <EasingColorKeyFrame KeyTime="0" Value="#FF07070A"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D0D11"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--optionsMarketTitleGrid-->
        <Storyboard x:Key="optionsMarketTitleGridAnimate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="optionsMarketTitleGrid">
                <EasingColorKeyFrame KeyTime="0" Value="#FF101013"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF050506"/>
            </ColorAnimationUsingKeyFrames>

        </Storyboard>
        <Storyboard x:Key="optionsMarketTitleGridAnimate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="optionsMarketTitleGrid">
                <EasingColorKeyFrame KeyTime="0" Value="#FF050506"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF101013"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--TopCanvasButtomGrid-->
        <Storyboard x:Key="TopCanvasButtomGridAnimate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="TopCanvasButtomGrid">
                <EasingColorKeyFrame KeyTime="0" Value="#FF0D0D11"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF08080A"/>
            </ColorAnimationUsingKeyFrames>

        </Storyboard>
        <Storyboard x:Key="TopCanvasButtomGridAnimate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="TopCanvasButtomGrid">
                <EasingColorKeyFrame KeyTime="0" Value="#FF08080A"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D0D11"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--strategyOfOptionsCanvas-->
        <Storyboard x:Key="strategyOfOptionsCanvasAnimate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" Storyboard.TargetName="strategyOfOptionsCanvas">
                <EasingColorKeyFrame KeyTime="0" Value="#FF151519"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF1F1F25"/>
            </ColorAnimationUsingKeyFrames>

        </Storyboard>
        <Storyboard x:Key="strategyOfOptionsCanvasAnimate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="strategyOfOptionsCanvas">
                <EasingColorKeyFrame KeyTime="0" Value="#FF1F1F25"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF151519"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--strategyOfFuturesCanvas-->
        <Storyboard x:Key="strategyOfFuturesCanvasAnimate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" Storyboard.TargetName="strategyOfFuturesCanvas">
                <EasingColorKeyFrame KeyTime="0" Value="#FF151519"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF1F1F25"/>
            </ColorAnimationUsingKeyFrames>

        </Storyboard>
        <Storyboard x:Key="strategyOfFuturesCanvasAnimate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="strategyOfFuturesCanvas">
                <EasingColorKeyFrame KeyTime="0" Value="#FF1F1F25"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF151519"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--实现鼠标经过渐变-->


        <LinearGradientBrush x:Key="Brush1" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF25112C" Offset="0"/>
            <GradientStop Color="#FF0C0C1B" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="maxSty" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\max.png" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\max_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\max_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\max_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="closeSty" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\close.png" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\close_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\close_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\close_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="minSty" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\min.png" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\min_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\min_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\min_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="normalSty" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\normal.png" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\normal_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\normal_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\normal_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="darkButton" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Black"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <!--背景色-->
                        <Border x:Name="back" Opacity="0.8" CornerRadius="3">
                            <Border.BitmapEffect>
                                <OuterGlowBitmapEffect Opacity="0.7" GlowSize="0" GlowColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" />
                            </Border.BitmapEffect>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1.5">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0"/>
                                            <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0.4"/>
                                            <GradientStop Color="#FFF" Offset="1"/>
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <!--前景色及边框-->
                            <Border x:Name="fore" BorderThickness="1" CornerRadius="3" BorderBrush="#5555">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#6FFF" Offset="0.5"/>
                                                <GradientStop Color="#1111" Offset="0.51"/>
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <!--按钮内容-->
                                <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding  Content}">
                                    <ContentPresenter.BitmapEffect>
                                        <DropShadowBitmapEffect Color="#000" Direction="-90" ShadowDepth="2" Softness="0.1" Opacity="0.3" />
                                    </ContentPresenter.BitmapEffect>
                                </ContentPresenter>
                            </Border>
                        </Border>
                        <!--触发器-->
                        <ControlTemplate.Triggers>
                            <!--鼠标移入移出-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="6" Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <ColorAnimation To="#AFFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation To="#3FFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--按钮按下弹起-->
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="3" Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <ColorAnimation To="#3AAA" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation To="#2111" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--按钮失效-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#B444"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <DoubleAnimation To="1" Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)" />
                                            <DoubleAnimation To="-135" Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)" />
                                            <ColorAnimation To="#FFF" Duration="0:0:0.3" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)" />
                                            <ColorAnimation To="#D555" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                            <ColorAnimation To="#CEEE" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation To="#CDDD" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)" />
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border" Background="#FF0F1017"  BorderThickness="0" CornerRadius="0,0,0,0">
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF007ACC" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{x:Null}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF0A9DFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="scrollTop" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <StackPanel Orientation="Horizontal" Height="17" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\scroll_top.png" Margin="0" Width="17" Height="17" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\scroll_top_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\scroll_top_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\scroll_top_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="scrollButtom" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <StackPanel Orientation="Horizontal" Height="17" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\scroll_Buttom.png" Margin="0" Width="17" Height="17" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\scroll_Buttom_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\scroll_Buttom_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\scroll_Buttom_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="scrollThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Rectangle Width="12" Fill="#FF242530" RadiusX="7" RadiusY="7">
                        </Rectangle>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>

        <Style x:Key="futureScrollThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Rectangle Width="12" Fill="#FF404251" RadiusX="7" RadiusY="7">
                        </Rectangle>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>

        <Style x:Key="scrollBackground" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="Transparent">
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Simple ScrollBar  它使用了 SimpleThumb、SimpleRepeatButton 和 SimpleScrollRepeatButton -->

        <Style x:Key="SimpleScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="#FF101017
"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="Auto" >
                            <!--Width:{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}};-->
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="18"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="18"/>
                            </Grid.RowDefinitions>

                            <RepeatButton x:Name="DecreaseRepeat" Style="{StaticResource scrollTop}" Command="ScrollBar.LineUpCommand" Margin="0" Grid.RowSpan="1">

                            </RepeatButton>

                            <!-- Track 是一种特殊的布局容器，可调整用于在其一侧执行跳转滚动的 thumb 和 repeat button 的大小 -->
                            <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource scrollThumb}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Style="{StaticResource scrollBackground}" Command="ScrollBar.PageDownCommand"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Style="{StaticResource scrollBackground}" Command="ScrollBar.PageUpCommand"/>
                                </Track.DecreaseRepeatButton>
                            </Track>

                            <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Style="{StaticResource scrollButtom}" Command="ScrollBar.LineDownCommand">
                                <Grid>
                                    <Path x:Name="IncreaseArrow" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                </Grid>
                            </RepeatButton>
                        </Grid>

                        <!-- 它对 ScrollBar 使用一个模板，并将其旋转为“水平”
                    它还会更改命令，使其执行“向左”和“向右”命令，而不是执行“向上”和“向下”命令 -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Horizontal">

                                <!-- 将 ScrollBar 从“垂直”旋转为“水平” -->
                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>

                                <!-- Track 在内部绑定到“方向”，因此我们需要将其旋转回“垂直” -->
                                <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>

                                <!-- 更改命令，以执行“水平”命令 -->
                                <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat"/>
                                <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat"/>
                                <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown"/>
                                <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="futureSimpleScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="#FF101017
"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="Auto" >
                            <!--Width:{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}};-->
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="18"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="18"/>
                            </Grid.RowDefinitions>

                            <RepeatButton x:Name="DecreaseRepeat" Style="{StaticResource scrollTop}" Command="ScrollBar.LineUpCommand" Margin="0" Grid.RowSpan="1">

                            </RepeatButton>

                            <!-- Track 是一种特殊的布局容器，可调整用于在其一侧执行跳转滚动的 thumb 和 repeat button 的大小 -->
                            <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource futureScrollThumb}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Style="{StaticResource scrollBackground}" Command="ScrollBar.PageDownCommand"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Style="{StaticResource scrollBackground}" Command="ScrollBar.PageUpCommand"/>
                                </Track.DecreaseRepeatButton>
                            </Track>

                            <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Style="{StaticResource scrollButtom}" Command="ScrollBar.LineDownCommand">
                                <Grid>
                                    <Path x:Name="IncreaseArrow" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                </Grid>
                            </RepeatButton>
                        </Grid>

                        <!-- 它对 ScrollBar 使用一个模板，并将其旋转为“水平”
                    它还会更改命令，使其执行“向左”和“向右”命令，而不是执行“向上”和“向下”命令 -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Horizontal">

                                <!-- 将 ScrollBar 从“垂直”旋转为“水平” -->
                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>

                                <!-- Track 在内部绑定到“方向”，因此我们需要将其旋转回“垂直” -->
                                <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>

                                <!-- 更改命令，以执行“水平”命令 -->
                                <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat"/>
                                <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat"/>
                                <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown"/>
                                <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Simple ScrollViewer 
    ScrollViewer 是 Grid 控件，该控件包含 ContentPresenter 以及 Horizontal 和 Vertical ScrollBar 
    它可供 ListBox、MenuItem、ComboBox 和 TreeView 使用 -->
        <Style x:Key="SimpleScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}"/>

                            <!-- ScrollBars 的可见性通过控件的实现来控制 -->
                            <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" />
                            <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="futureSimpleScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}"/>

                            <!-- ScrollBars 的可见性通过控件的实现来控制 -->
                            <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Style="{DynamicResource futureSimpleScrollBar}" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" />
                            <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Style="{DynamicResource futureSimpleScrollBar}" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Simple ListBox - 它使用 SimpleScrollViewer 来使项滚动，并使用 SimpleListBoxItem 定义每个项的外观 -->
        <Style x:Key="SimpleListBox" TargetType="{x:Type ListBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Grid>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <ScrollViewer Margin="1" Style="{DynamicResource SimpleScrollViewer}" Focusable="false" Background="{TemplateBinding Background}">

                                <!-- StackPanel 用来显示子级，方法是将 IsItemsHost 设置为 True -->
                                <StackPanel Margin="2" IsItemsHost="true"/>

                            </ScrollViewer>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="White" />
            <Setter Property="BorderThickness" Value="0,3,0,0" />
            <Setter Property="Foreground" Value="#FF042271" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="VerticalContentAlignment" Value="Center" />

            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Grid>

                            <Border x:Name="Bd" CornerRadius="0,0,0,0" BorderBrush="#FF0076C8" Background="{DynamicResource ControlBackgroundBrush}" BorderThickness="0,3,0,0">

                                <ScrollViewer Padding="{TemplateBinding Padding}" Style="{StaticResource SimpleScrollViewer}">
                                    <StackPanel Margin="{TemplateBinding Padding}">

                                        <GridViewHeaderRowPresenter
            Margin="2,0,2,0"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
            AllowsColumnReorder="{Binding View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
            ColumnHeaderContainerStyle="{Binding View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
            ColumnHeaderContextMenu="{Binding View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
            ColumnHeaderStringFormat="{Binding View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
            ColumnHeaderTemplate="{Binding View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
            ColumnHeaderTemplateSelector="{Binding View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
            ColumnHeaderToolTip="{Binding View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
            Columns="{Binding View.Columns, RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    </StackPanel>
                                </ScrollViewer>


                            </Border>


                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="futureListViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="#FF272935" />
            <Setter Property="BorderBrush" Value="White" />
            <Setter Property="BorderThickness" Value="0,1" />
            <Setter Property="Foreground" Value="#FF042271" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="VerticalContentAlignment" Value="Center" />

            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Grid>

                            <Border x:Name="Bd" CornerRadius="0,0,0,0" BorderBrush="#FF454757" Background="{DynamicResource ControlBackgroundBrush}" BorderThickness="0,1,0,1">

                                <ScrollViewer Padding="{TemplateBinding Padding}" Style="{StaticResource futureSimpleScrollViewer}">
                                    <StackPanel Margin="{TemplateBinding Padding}">

                                        <GridViewHeaderRowPresenter
            Margin="2,0,2,0"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
            AllowsColumnReorder="{Binding View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
            ColumnHeaderContainerStyle="{Binding View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
            ColumnHeaderContextMenu="{Binding View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
            ColumnHeaderStringFormat="{Binding View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
            ColumnHeaderTemplate="{Binding View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
            ColumnHeaderTemplateSelector="{Binding View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
            ColumnHeaderToolTip="{Binding View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
            Columns="{Binding View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                           />

                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    </StackPanel>
                                </ScrollViewer>


                            </Border>


                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Stroke="#8E6EA6F5" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListViewItem1" TargetType="{x:Type ListViewItem}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
            <Setter Property="Background" Value="#FFBEBED8" />
            <Setter Property="BorderBrush" Value="#FFCB3434" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Margin" Value="0,0,0,1" />
            <Setter Property="Padding" Value="5,2,5,2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="HoverOff">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="SelectedOn">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="SelectedOff">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="FocussedOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="FocussedOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <Border SnapsToDevicePixels="true" CornerRadius="2" x:Name="border" Background="#FF833F3F" BorderThickness="1,1,1,0">

                            <Grid>
                                <Rectangle x:Name="Background" IsHitTestVisible="False" Opacity="0.25" Fill="White" RadiusX="1" RadiusY="1"/>
                                <Rectangle x:Name="HoverRectangle" IsHitTestVisible="False" Opacity="0" Fill="#FF665959" RadiusX="1" RadiusY="1"/>
                                <Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="#FF4D1A1A" RadiusX="1" RadiusY="1"/>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,4,0,4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Content="{Binding}">
                                </ContentPresenter>
                                <!--<GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,10,0,10" VerticalAlignment="Stretch" Content="{Binding}" />-->
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard"/>
                                </Trigger.EnterActions>

                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                                </MultiTrigger.ExitActions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="False" />
                                </MultiTrigger.Conditions>

                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>

                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                                <Setter Property="Fill" TargetName="Background" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>


                            </MultiTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Selector.IsSelected" Value="True">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource BlackColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>



        <ControlTemplate x:Key="tmpForThumb" TargetType="{x:Type Thumb}">

            <Border>

                <Rectangle Width="1" Name="rec">

                    <Rectangle.Fill>

                        <LinearGradientBrush StartPoint="0.5,0.3" EndPoint="1,1" Opacity="0.2">

                            <GradientStop Color="#FF939BCB"/>

                            <GradientStop Color="Transparent" Offset="1"/>

                        </LinearGradientBrush>

                    </Rectangle.Fill>

                </Rectangle>

            </Border>

            <ControlTemplate.Triggers>

                <Trigger Property="IsMouseOver" Value="True">

                    <Setter TargetName="rec" Property="Fill" Value="#FF767EA8"/>

                </Trigger>

            </ControlTemplate.Triggers>

        </ControlTemplate>

        <Style  TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#FF76768B"/>
            <Setter Property="BorderThickness" Value="0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid Name="g">
                            <Grid.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" Opacity="0.2">
                                    <GradientStop Color="Transparent"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <Border Name="bd" Padding="{TemplateBinding Padding}">
                                <ContentPresenter Margin="5,4,1,3"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <Thumb Name="PART_HeaderGripper" Template="{StaticResource tmpForThumb}" HorizontalAlignment="Right" Margin="0,0,-1,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="g" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" Opacity="0.2">
                                            <GradientStop Color="White" Offset="0" />

                                            <GradientStop Color="Transparent" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--数据源-->

        <!--ListViewItem的样式-->

        <Style TargetType="{x:Type ListViewItem}">

            <Style.Setters>

                <Setter Property="SnapsToDevicePixels" Value="True"/>

                <Setter Property="Template">

                    <Setter.Value>

                        <ControlTemplate TargetType="{x:Type ListViewItem}">

                            <Border x:Name="bd"  
                               BorderThickness="1"  
                                Padding="{TemplateBinding Padding}"  
                               SnapsToDevicePixels="True">

                                <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                                  Margin="3"/>

                            </Border>

                            <ControlTemplate.Triggers>

                                <Trigger Property="IsSelected" Value="True">

                                    <Trigger.Setters>

                                        <Setter TargetName="bd" Property="Background">

                                            <Setter.Value>

                                                <LinearGradientBrush StartPoint="0.5,0.22" EndPoint="0.5,1">

                                                    <GradientStop Color="LightGray" Offset="0.31"/>

                                                    <GradientStop Color="Gray" Offset="0.88"/>

                                                </LinearGradientBrush>

                                            </Setter.Value>

                                        </Setter>

                                    </Trigger.Setters>

                                </Trigger>

                            </ControlTemplate.Triggers>

                        </ControlTemplate>

                    </Setter.Value>

                </Setter>

            </Style.Setters>

        </Style>


        <!--checkbox样式-->
        <!--当控件获得键盘焦点时的样式-->

        <Style x:Key="FocusStyle">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Stroke="#FF919BB6" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- 
  CheckBox的样式 
-->
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="#FF787B8E"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator FlowDirection="LeftToRight" VerticalAlignment="Center">
                            <BulletDecorator.Bullet>
                                <Border x:Name="bd"  
                               BorderThickness="1"  
                                BorderBrush="#FF504B5B"  
                                MinHeight="15"  
                                MinWidth="15"  
                               VerticalAlignment="Center">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0"  
                                      EndPoint="0,1">
                                            <GradientStop Color="#FF0F111B" Offset="0"/>
                                            <GradientStop Color="#FF0C0E16" Offset="1"/>

                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Path x:Name="cp" Width="12" Height="12"  
                        Stroke="#FFCDCDD6"  
                             StrokeThickness="1"/>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="2,0"/>
                        </BulletDecorator>
                        <!-- 
                    控件触发器 
                -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <!-- 画上一个勾 -->
                                <Setter TargetName="cp" Property="Data"  
          Value="M 0,6 L 6,12 12,0"/>
                                <Setter Property="Foreground" Value="#FF999EB2"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#FF2E3347" Offset="0"/>
                                            <GradientStop Color="#FF24283A" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--checkbox样式-->

        <!--combobox样式-->
        <!--下拉框样式-->
        <Style x:Key="ComboBoxFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0"/>
            <GradientStop Color="Transparent" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF484B5F"/>
        <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
        <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" x:Name="Chrome"  BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"  SnapsToDevicePixels="true">
                            <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="#808080" HorizontalAlignment="Center" Margin="1,1,0,0" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
            <GradientStop Color="#FF575B72" Offset="0.05"/>

            <GradientStop Color="#FF3A3C49" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Foreground="White"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <my:ButtonChrome x:Name="Chrome" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
                        </my:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Arrow" Value="#FF51546A"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#FF3F4149"/>
                                <Setter Property="BorderBrush" Value="White"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="Placement" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <my:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
                        <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </my:SystemDropShadowChrome>
                </Popup>
                <my:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsDropDownOpen" Value="true">
                    <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    <Setter Property="Background" Value="#FFF4F4F4"/>
                </Trigger>
                <Trigger Property="IsGrouping" Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="CboCommomStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>

            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="4,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true" Margin="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Border x:Name="Shdw" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                    <Border x:Name="DropDownBorder" BorderBrush="#FF3D3F4F" BorderThickness="1" Background="#FF777FB0">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" Fill="#FF14161F"/>
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Border>
                            </Popup>
                            <ToggleButton Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FF303240"/>
                            <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>

                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" Value="#FF272935"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                <Setter Property="Background" Value="#FFF4F4F4"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#FF3F4149"/>
                                <Setter Property="BorderBrush" Value="White"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#FF3E414D"/>
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>

            </Style.Triggers>
        </Style>
        <!--combobox样式-->

        <Style x:Key="optionsMarketTitleBorder" TargetType="{x:Type Grid}">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#FF0E0F13" Opacity="0.4"/>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="textboxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="#FF9198AC"/>
            <Setter Property="BorderBrush" Value="#FF2E3143"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="SelectionBrush" Value="#FF3E414D"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#FF3E414D"/>

                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Window.Effect>
        <DropShadowEffect Direction="270" Opacity="0.75" ShadowDepth="3" BlurRadius="7" Color="#FF007ACC"/>
    </Window.Effect>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Frame x:Name="Top1" Content="" HorizontalAlignment="Left" Height="38" VerticalAlignment="Top" Width="1186" Background="#FF1B1B1F" MouseDown="Top1_MouseDown" MouseMove="Top1_MouseMove" MouseDoubleClick="Top1_MouseDoubleClick"/>

        <Button x:Name="minButton" Margin="0,11,51,0" Click="MinButton_Click_1" Focusable="False" Height="12" Width="15" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource minSty}"/>
        <Button x:Name="maxButton" Margin="0,12,31,0" Click="MaxButton_Click_1" Focusable="False" Height="12" Width="15" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource maxSty}"/>
        <Button x:Name="closeButton" Margin="0,11,10,0" Click="CloseButton_Click_1" Focusable="False" Height="12" Width="15" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource closeSty}"/>

        <Grid x:Name="Grid1" HorizontalAlignment="Left" Height="356" Margin="29,38,0,0" VerticalAlignment="Top" Width="1127" ClipToBounds="True" Background="#FF292932" MouseEnter="Grid1_MouseEnter" MouseLeave="Grid1_MouseLeave">
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Canvas x:Name="TopCanvas1" HorizontalAlignment="Right" Height="356" Margin="0" VerticalAlignment="Bottom" Width="1127">
                <Grid x:Name="TopCanvasButtomGrid" HorizontalAlignment="Left" Height="29" VerticalAlignment="Top" Width="1128" Canvas.Bottom="1" Background="#FF101013" Canvas.Top="1" MouseEnter="TopCanvasButtomGrid_MouseEnter" MouseLeave="TopCanvasButtomGrid_MouseLeave">
                    <Label x:Name="typeLabel" Content="衍生品种类" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FF9198AC" Background="{x:Null}" Margin="11,2,0,0"/>
                    <ComboBox x:Name="typeComboBox" VerticalAlignment="Top" IsReadOnly="True" Style="{StaticResource CboCommomStyle}" BorderBrush="#FF414551" Foreground="#FF9198AC" FlowDirection="LeftToRight" Margin="80,3,0,0" HorizontalAlignment="Left" Height="23" Width="70" >
                        <ComboBoxItem x:Name="futuresComboBoxItem" Content="期货" HorizontalAlignment="Left" Width="65" Selected="futuresComboBoxItem_Selected"/>
                        <ComboBoxItem x:Name="optionsComboBoxItem" Content="期权" HorizontalAlignment="Left" Width="65" Selected="optionsComboBoxItem_Selected" />
                    </ComboBox>
                    <Label x:Name="traderLabel" Content="交易商" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FF9198AC" RenderTransformOrigin="0.522,0.52" Background="{x:Null}" Margin="150,2,0,0" />
                    <ComboBox x:Name="optionsTraderComboBox" HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" SelectedIndex="0" Style="{StaticResource CboCommomStyle}" Foreground="#FF9198AC" BorderBrush="#FF414551" FlowDirection="LeftToRight" Margin="196,3,0,0" >
                        <ComboBoxItem x:Name="optionsTraderComboBoxItem1" Content=" 上期所" HorizontalAlignment="Left" Width="80"/>
                        <ComboBoxItem x:Name="optionsTraderComboBoxItem2" Content=" 中金所" HorizontalAlignment="Left" Width="80"/>
                    </ComboBox>
                    <ComboBox x:Name="futuresTraderComboBox" HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" SelectedIndex="0" Style="{StaticResource CboCommomStyle}" BorderBrush="#FF414551" Foreground="#FF9198AC" FlowDirection="LeftToRight" RenderTransformOrigin="0.5,0.522" Margin="196,3,0,0" >
                        <ComboBoxItem x:Name="futuresTraderComboBoxItem1" Content=" 上期所" HorizontalAlignment="Left" Width="80"/>
                        <ComboBoxItem x:Name="futuresTraderComboBoxItem2" Content=" 大商所" HorizontalAlignment="Left" Width="80"/>
                        <ComboBoxItem x:Name="futuresTraderComboBoxItem3" Content=" 中金所" HorizontalAlignment="Left" Width="80"/>
                        <ComboBoxItem x:Name="futuresTraderComboBoxItem4" Content=" 郑商所" HorizontalAlignment="Left" Width="80"/>
                    </ComboBox>
                    <Label x:Name="nameLabel" Content="标的期货" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FF9198AC" Background="{x:Null}" Margin="276,2,0,0" />
                    <ComboBox x:Name="nameComboBox" HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" SelectedIndex="0" Style="{StaticResource CboCommomStyle}" Foreground="#FF9198AC" BorderBrush="#FF414551" FlowDirection="LeftToRight" Margin="334,3,0,0" />
                </Grid>
                <ListView x:Name="futuresMarketListView" Height="326" Width="1127"  Background="#FF292932" BorderBrush="{x:Null}" BorderThickness="0" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource futureListViewStyle}"  ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible" FlowDirection="LeftToRight" Canvas.Top="30" Visibility="Hidden">
                    <ListView.View>
                        <GridView AllowsColumnReorder="True">
                            <GridViewColumn x:Name="nameFMGVCH" Header=" 名称" Width=" 100" />
                            <GridViewColumn x:Name="newPriceFMGVCH" Header=" 最新价格" Width=" 100"/>
                            <GridViewColumn x:Name="sellPriceFMGVCH" Header=" 卖价" Width=" 100"/>
                            <GridViewColumn x:Name="buyPriceFMGVCH" Header=" 买价" Width=" 100"/>
                            <GridViewColumn x:Name="buyVolumnFMGVCH" Header=" 买量" Width=" 100"/>
                            <GridViewColumn x:Name="sellVolumnFMGVCH" Header=" 卖量" Width=" 100"/>
                            <GridViewColumn x:Name="tradeVolumnFMGVCH" Header=" 成交量" Width=" 100"/>
                            <GridViewColumn x:Name="openPriceFMGVCH" Header=" 今日开盘价" Width=" 100"/>
                            <GridViewColumn x:Name="upAndDownFMGVCH" Header=" 涨跌" Width=" 100"/>
                            <GridViewColumn x:Name="amountOfUpAndDownFMGVCH" Header=" 涨跌幅度" Width=" 100"/>
                            <GridViewColumn x:Name="highestPriceFMGVCH" Header=" 最高价" Width=" 100"/>
                            <GridViewColumn x:Name="lowestPriceFMGVCH" Header=" 最低价" Width=" 100"/>
                            <GridViewColumn x:Name="raiseLimitPriceFMGVCH" Header=" 涨停板价" Width=" 100"/>
                            <GridViewColumn x:Name="downLimitPriceFMGVCH" Header=" 跌停板价" Width=" 100"/>
                            <GridViewColumn x:Name="settlePriceFMGVCH" Header=" 昨日结算价" Width=" 100"/>
                            <GridViewColumn x:Name="closePriceFMGVCH" Header=" 昨日收盘价" Width=" 100"/>
                            <GridViewColumn x:Name="yesterdayTradeVolumnFMGVCH" Header=" 昨日成交量" Width=" 100"/>
                        </GridView>
                    </ListView.View>
                </ListView>

                <Border BorderBrush="#FF414559"></Border>
                <Grid x:Name="futuresOfOptionGrid" Height="49" Canvas.Top="30" Width="882">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="88*" />
                        <ColumnDefinition Width="88*" />
                        <ColumnDefinition Width="88*" />
                        <ColumnDefinition Width="88*" />
                        <ColumnDefinition Width="88*" />
                        <ColumnDefinition Width="88*" />
                        <ColumnDefinition Width="88*" />
                        <ColumnDefinition Width="89*" />
                        <ColumnDefinition Width="88*" />
                        <ColumnDefinition Width="89*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions >
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <TextBlock Text="最新价" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column=" 0" Grid.Row=" 0" Foreground="#FF76768B" Margin="26,4"/>
                    <TextBlock Text="涨跌" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column=" 1" Grid.Row=" 0" Foreground="#FF76768B" Margin="32,4"/>
                    <TextBlock Text="涨跌幅" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.Row=" 0" Foreground="#FF76768B" Margin="26,4"/>
                    <TextBlock Text="买价" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="3" Grid.Row=" 0" Foreground="#FF76768B" Margin="32,4"/>
                    <TextBlock Text="卖价" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="4" Grid.Row=" 0" Foreground="#FF76768B" Margin="32,4"/>
                    <TextBlock Text="最高价" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="5" Grid.Row=" 0" Foreground="#FF76768B" Margin="26,4"/>
                    <TextBlock Text="最低价" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="6" Grid.Row=" 0" Foreground="#FF76768B" Margin="26,4"/>
                    <TextBlock Text="成交量" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="7" Grid.Row=" 0" Foreground="#FF76768B" Margin="26,4,27,4"/>
                    <TextBlock Text="到期日" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="8" Grid.Row=" 0" Foreground="#FF76768B" Margin="26,4"/>
                    <TextBlock Text="更新时间" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="9" Grid.Row=" 0" Foreground="#FF76768B" Margin="21,4,20,4"/>
                    <TextBox x:Name="newPriceTextBox" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column=" 0" Grid.Row=" 1" Margin="41,4,41,3"/>
                </Grid>
                <Border x:Name="titileBorder4" BorderBrush="#FF414559" BorderThickness="0,1,0,0" Grid.Column="2" Height="25" VerticalAlignment="Stretch" Width="1128" MaxHeight="25" ScrollViewer.VerticalScrollBarVisibility="Disabled" UseLayoutRounding="True" AllowDrop="True" ClipToBounds="True" HorizontalAlignment="Left" Canvas.Top="100" >
                    <Grid x:Name="optionsMarketTitleGrid" Style="{StaticResource optionsMarketTitleBorder}" Height="25" Width="1128" FlowDirection="LeftToRight" MaxHeight="25" ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalAlignment="Center" Canvas.Top="100" RenderTransformOrigin="0.5,0.5" MouseEnter="optionsMarketTitleGrid_MouseEnter" MouseLeave="optionsMarketTitleGrid_MouseLeave" >

                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="0.002"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="403" />
                            <ColumnDefinition Width="79" />
                            <ColumnDefinition Width="400" />
                        </Grid.ColumnDefinitions>


                        <Border BorderThickness="0,0,1,0" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="403" MaxWidth="403" MaxHeight="25" ScrollViewer.VerticalScrollBarVisibility="Disabled" BorderBrush="#FF414559" />
                        <Border BorderBrush="#FF414559" BorderThickness="0,0,1,0" Grid.Column="1" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="79" MaxWidth="79" MaxHeight="25" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
                        <Border BorderBrush="#FF414559" BorderThickness="0,0,1,0" Grid.Column="2" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="398" MaxWidth="400" MaxHeight="25" ScrollViewer.VerticalScrollBarVisibility="Disabled" Margin="1,0,0,0" />

                        <TextBlock Text=" 看涨" TextAlignment="Center" Grid.Row=" 0" Grid.Column=" 0" Margin="3,0,0,0" Padding="0,4,0,0" MaxWidth="400" MaxHeight="25" Foreground="#FF70728A"/>
                        <TextBlock Text=" 看跌" TextAlignment="Center" Grid.Row=" 0" Grid.Column="1" Padding="0,4,0,0" MaxWidth="400" MaxHeight="25" Foreground="#FF70728A" Grid.ColumnSpan="2" Margin="79,0,0,0"/>
                    </Grid>
                </Border>
                <ListView Name="optionsMarketListView" Height="231" Width="1127" VerticalAlignment="Top" HorizontalAlignment="Left" Background="{x:Null}" BorderBrush="#FF666C89" BorderThickness="0,0,0,1" Foreground="{x:Null}" Style="{StaticResource futureListViewStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible" FlowDirection="LeftToRight" Canvas.Top="125" >
                    <ListView.View>
                        <GridView AllowsColumnReorder="True">
                            <GridViewColumn x:Name="buyPriceROMGVCH" Header=" 买价" Width="80"  />
                            <GridViewColumn x:Name="sellPriceROMGVCH" Header=" 卖价" Width=" 80"/>
                            <GridViewColumn x:Name="newPriceROMGVCH" Header=" 最新价" Width=" 80"/>
                            <GridViewColumn x:Name="amountROMGVCH" Header=" 现量" Width=" 80"/>
                            <GridViewColumn x:Name="tradeVolumnROMGVCH" Header=" 成交量" Width=" 80"/>
                            <GridViewColumn x:Name="exercisePriceOMGVCH" Header=" 行权价" Width=" 80"/>
                            <GridViewColumn x:Name="tradeVolumnDOMGVCH" Header=" 成交量" Width=" 80"/>
                            <GridViewColumn x:Name="amountDOMGVCH" Header=" 现量" Width=" 80"/>
                            <GridViewColumn x:Name="newPriceRDOMGVCH" Header=" 最新价" Width=" 80"/>
                            <GridViewColumn x:Name="sellPriceDOMGVCH" Header=" 卖价" Width=" 80"/>
                            <GridViewColumn x:Name="buyPriceDOMGVCH" Header=" 买价" Width=" 80"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Canvas>
        </Grid>

        <Grid x:Name="Grid3" HorizontalAlignment="Left" Height="238" Margin="29,0,0,21" VerticalAlignment="Bottom" Width="915" Background="#FF0D0D11" MouseEnter="Grid3_MouseEnter" MouseLeave="Grid3_MouseLeave">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TabControl x:Name="multipleTabControl" HorizontalAlignment="Left" Height="273" VerticalAlignment="Top" Width="915" BorderBrush="{x:Null}" Background="{x:Null}" Margin="0,-35,0,0">
                <TabItem Header="交易区" Foreground="White"  Style="{StaticResource TabItemStyle}" Margin="-2,6,2,-10">

                    <Grid Margin="-4,0,-3,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ListView x:Name="optionsTradingListView" HorizontalAlignment="Left" Height="239" VerticalAlignment="Top" Width="916" Background="{x:Null}" BorderBrush="#FF0176C9" BorderThickness="0,3,0,0" Margin="0,7,0,0" SelectionChanged="optionsTradingListView_SelectionChanged" IsSynchronizedWithCurrentItem="False" ScrollViewer.VerticalScrollBarVisibility="Visible" Style="{StaticResource ListViewStyle}" ScrollViewer.HorizontalScrollBarVisibility="Visible">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn x:Name="userOTGVCH" Header="投资账户 " Width="100"/>
                                    <GridViewColumn x:Name="nameOTGVCH" Header="合约名称 " Width="100"/>
                                    <GridViewColumn x:Name="typeOTGVCH" Header="合约类型 " Width="80">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate>
                                                <ComboBox x:Name="typeOfOptionsComboBox">
                                                    <ComboBoxItem Content="看涨" HorizontalAlignment="Left" Width="80"/>
                                                    <ComboBoxItem Content="看跌" HorizontalAlignment="Left" Width="80"/>
                                                </ComboBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="exercisePriceOTGVCH" Header="行权价 " Width="80"/>
                                    <GridViewColumn x:Name="typeOfTradeOTGVCH" Header=" 交易类型" Width="60">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate>
                                                <ComboBox x:Name="typeOfTradingComboBox">
                                                    <ComboBoxItem Content="买" HorizontalAlignment="Left" Width="60"/>
                                                    <ComboBoxItem Content="卖" HorizontalAlignment="Left" Width="60"/>
                                                    <ComboBoxItem Content="开" HorizontalAlignment="Left" Width="60"/>
                                                    <ComboBoxItem Content="平" HorizontalAlignment="Left" Width="60"/>
                                                </ComboBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="lotOTGVCH" Header=" 交易手数" Width="60">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate >
                                                <ListBox x:Name="lotListBox" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="formOfClientageOTGVCH" Header=" 委托方式" Width=" 60">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate>
                                                <ComboBox x:Name="formOfClientageComboBox">
                                                    <ComboBoxItem Content=" ROD" HorizontalAlignment="Left" Width=" 60"/>
                                                    <ComboBoxItem Content=" FOK" HorizontalAlignment="Left" Width=" 60"/>
                                                    <ComboBoxItem Content=" IOC" HorizontalAlignment="Left" Width=" 60"/>
                                                </ComboBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="priceOfClientageOTGVCH" Header=" 委托价格" Width=" 80">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBox x:Name="priceOfClientageTextBox" Text=" " Width=" 80"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="priceOfMarketOTGVCH" Header=" 市场价格" Width=" 80"/>
                                    <GridViewColumn x:Name="timeLimitOTGVCH" Header=" 有效期" Width=" 100"/>
                                    <GridViewColumn x:Name="setGradientOTGVCH" Header=" 设置梯度" Width=" 60">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <CheckBox />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="accuracyOTGVCH" Header=" 精确度" Width=" 50">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBox x:Name="accuracyTextBox" Text=" " Width=" 50"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="arithmeticProgressionOTGVCH" Header="手数等差 " Width=" Auto">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBox x:Name="arithmeticProgressionTextBox" Text=" " Width=" 60"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <ListView x:Name="futuresTradingListView" HorizontalAlignment="Left" Height="239" VerticalAlignment="Top" Width="916" Background="{x:Null}" BorderBrush="#FF0176C9" BorderThickness="0,3,0,0" Margin="0,7,0,0" SelectionChanged="optionsTradingListView_SelectionChanged" IsSynchronizedWithCurrentItem="False" ScrollViewer.VerticalScrollBarVisibility="Visible" Style="{StaticResource ListViewStyle}" ScrollViewer.HorizontalScrollBarVisibility="Visible" Visibility="Hidden">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn x:Name="userFTGVCH" Header="投资账户 " Width="100"/>
                                    <GridViewColumn x:Name="namefTGVCH" Header="商品名称 " Width="100"/>
                                    <GridViewColumn x:Name="typeFTGVCH" Header="合约类型 " Width="80">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate>
                                                <ComboBox x:Name="typeOfOptionsComboBox">
                                                    <ComboBoxItem Content="看涨" HorizontalAlignment="Left" Width="80"/>
                                                    <ComboBoxItem Content="看跌" HorizontalAlignment="Left" Width="80"/>
                                                </ComboBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="typeOfTradeFTGVCH" Header=" 交易类型" Width="60">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate>
                                                <ComboBox x:Name="typeOfTradingComboBox">
                                                    <ComboBoxItem Content="买" HorizontalAlignment="Left" Width="60"/>
                                                    <ComboBoxItem Content="卖" HorizontalAlignment="Left" Width="60"/>
                                                    <ComboBoxItem Content="开" HorizontalAlignment="Left" Width="60"/>
                                                    <ComboBoxItem Content="平" HorizontalAlignment="Left" Width="60"/>
                                                </ComboBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="lotFTGVCH" Header=" 交易手数" Width="60">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate >
                                                <ListBox x:Name="lotListBox" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="formOfClientageFTGVCH" Header=" 委托方式" Width=" 60">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate>
                                                <ComboBox x:Name="formOfClientageComboBox">
                                                    <ComboBoxItem Content=" ROD" HorizontalAlignment="Left" Width=" 60"/>
                                                    <ComboBoxItem Content=" FOK" HorizontalAlignment="Left" Width=" 60"/>
                                                    <ComboBoxItem Content=" IOC" HorizontalAlignment="Left" Width=" 60"/>
                                                </ComboBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="priceOfClientageFTGVCH" Header=" 委托价格" Width=" 80">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBox x:Name="priceOfClientageTextBox" Text=" " Width=" 80"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="priceOfMarketFTGVCH" Header=" 市场价格" Width=" 80"/>
                                    <GridViewColumn x:Name="timeLimitFTGVCH" Header=" 有效期" Width=" 100"/>
                                    <GridViewColumn x:Name="setGradientFTGVCH" Header=" 设置梯度" Width=" 60">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <CheckBox />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="accuracyFTGVCH" Header=" 精确度" Width=" 50">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBox x:Name="accuracyTextBox" Text=" " Width=" 50"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn x:Name="arithmeticProgressionFTGVCH" Header="手数等差 " Width=" Auto">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBox x:Name="arithmeticProgressionTextBox" Text=" " Width=" 60"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </TabItem>

                <TabItem Header="持仓" Background="White" Style="{StaticResource TabItemStyle}" Foreground="White" BorderBrush="{x:Null}" BorderThickness="0" Margin="-2,6,2,-10">
                    <Grid Margin="-4,0,-3,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ListView x:Name="holdDetailListView" HorizontalAlignment="Left" Height="239" VerticalAlignment="Top" Width="916" BorderBrush="#FF0176C9" Background="{x:Null}" BorderThickness="0,3,0,0" Foreground="White" Margin="0,7,0,0" UseLayoutRounding="True"  Style="{StaticResource ListViewStyle}" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn x:Name="userHDGVCH" Header="投资账户 " />
                                    <GridViewColumn x:Name="traderHDGVCH" Header=" 交易商"/>
                                    <GridViewColumn x:Name="typeHDGVCH" Header=" 品种"/>
                                    <GridViewColumn x:Name="openTransactionHDGVCH" Header=" 开仓日期"/>
                                    <GridViewColumn x:Name="costHDGVCH" Header=" 成本"/>
                                    <GridViewColumn x:Name="lotHDGVCH" Header=" 手数"/>
                                    <GridViewColumn x:Name="typeOfTradeHDGVCH" Header=" 买/卖"/>
                                    <GridViewColumn x:Name="deliveryTimeHDGVCH" Header=" 交割期"/>
                                    <GridViewColumn x:Name="profitAndLossHDGVCH" Header=" 浮动盈亏"/>
                                    <GridViewColumn x:Name="marketProfitAndLossHDGVCH" Header=" 盯市盈亏"/>
                                    <GridViewColumn x:Name="cashDepositHDGVCH" Header=" 保证金"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </TabItem>

                <TabItem Header="历史记录" Foreground="White"  Style="{StaticResource TabItemStyle}" Margin="-2,6,2,-10">
                    <Grid Margin="-4,0,-3,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ListView x:Name="historyListView" HorizontalAlignment="Left" Height="211" VerticalAlignment="Top" Width="916" Background="{x:Null}" BorderBrush="#FF0176C9" BorderThickness="0,3,0,0" Margin="0,7,0,0" Style="{StaticResource ListViewStyle}" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn x:Name="nameHGVCH" Header=" 衍生品名称"/>
                                    <GridViewColumn x:Name="timeHGVCH" Header=" 交易时间"/>
                                    <GridViewColumn x:Name="typeHGVCH" Header=" 交易类型"/>
                                    <!-- 卖开卖平买开买平-->
                                    <GridViewColumn x:Name="lotOfPendingHGVCH" Header=" 挂单手数"/>
                                    <GridViewColumn x:Name="lotOfTransactionHGVCH" Header=" 成交手数"/>
                                    <GridViewColumn x:Name="statusOfTransactionHGVCH" Header=" 成交状态"/>
                                    <GridViewColumn x:Name="priceOfPendingHGVCH" Header=" 挂单价格"/>
                                    <GridViewColumn x:Name="priceOfTransactionHGVCH" Header=" 成交价格"/>
                                    <GridViewColumn x:Name="timeLimitHGVCH" Header=" 有效期"/>
                                    <GridViewColumn x:Name="userHGVCH" Header=" 投资账户"/>
                                    <GridViewColumn x:Name="IDOfTransactionHGVCH" Header=" 交易单号"/>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <CheckBox x:Name="optionsCheckBox" Content="仅显示期权交易明细" HorizontalAlignment="Right" Margin="0,0,165,8" VerticalAlignment="Bottom" Foreground="#FF9395A2" HorizontalContentAlignment="Right" VerticalContentAlignment="Bottom"/>
                        <CheckBox x:Name="futuresCheckBox" Content="仅显示期货交易明细" HorizontalAlignment="Right" Margin="0,0,20,8" VerticalAlignment="Bottom" Foreground="#FF9395A2" HorizontalContentAlignment="Right" VerticalContentAlignment="Bottom"/>
                    </Grid>
                </TabItem>

                <TabItem Header="账户管理"  Style="{StaticResource TabItemStyle}" Foreground="White" Margin="-2,6,2,-10">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <ListView x:Name="userManageListView" HorizontalAlignment="Left" Height="209" VerticalAlignment="Top" Width="915"  Background="{x:Null}" BorderBrush="#FF0176C9" BorderThickness="0,3,0,0" Margin="-3,7,-3,0" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible"  Style="{StaticResource ListViewStyle}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn x:Name="userUMGVCH" Header=" 账户号" Width=" 100"/>
                                    <GridViewColumn x:Name="statusOfUserUMGVCH" Header=" 登录状态" Width=" 70"/>
                                    <GridViewColumn x:Name="beginCapitalUMGVCH" Header=" 期初结存" Width=" Auto"/>
                                    <GridViewColumn x:Name="basicMarginUMGVCH" Header=" 基础保证金" Width=" Auto"/>
                                    <GridViewColumn x:Name="rightsOfMarketValueUMGVCH" Header=" 市值权益" Width=" Auto"/>
                                    <GridViewColumn x:Name="availableCapitalUMGVCH" Header=" 可用资金" Width=" Auto"/>
                                    <GridViewColumn x:Name="additionalFundUMGVCH" Header=" 应追加资金" Width=" Auto"/>
                                    <GridViewColumn x:Name="workingCapitalUMGVCH" Header=" 出入金" Width=" Auto"/>
                                    <GridViewColumn x:Name="offsetGainAndLossUMGVCH" Header=" 平仓盈亏" Width=" Auto"/>
                                    <GridViewColumn x:Name="floatingGainAndLossUMGVCH" Header=" 浮动盈亏" Width=" Auto"/>
                                    <GridViewColumn x:Name="implementGainAndLossUMGVCH" Header=" 执行盈亏" Width=" Auto"/>
                                    <GridViewColumn x:Name="serviceChargeUMGVCH" Header=" 手续费" Width=" Auto"/>
                                    <GridViewColumn x:Name="exerciseServiceChargeUMGVCH" Header=" 行权手续费" Width=" Auto"/>
                                    <GridViewColumn x:Name="deliveryServiceChargeUMGVCH" Header=" 交割手续费" Width=" Auto"/>
                                    <GridViewColumn x:Name="incomeOfRoyaltyUMGVCH" Header=" 权利金收入" Width=" Auto"/>
                                    <GridViewColumn x:Name="payOfRoyaltyUMGVCH" Header=" 权利金支出" Width=" Auto"/>
                                    <GridViewColumn x:Name="endCapitalUMGVCH" Header=" 期末结存" Width=" Auto"/>
                                    <GridViewColumn x:Name="pledgePaymentUMGVCH" Header=" 质押金" Width=" Auto"/>
                                    <GridViewColumn x:Name="customerBenefitUMGVCH" Header=" 客户权益" Width=" Auto"/>
                                    <GridViewColumn x:Name="usedMarginUMGVCH" Header=" 保证金占用" Width=" Auto"/>
                                    <GridViewColumn x:Name="deliveryMarginUMGVCH" Header=" 交割保证金" Width=" Auto"/>
                                    <GridViewColumn x:Name="riskDegreeUMGVCH" Header=" 风险度" Width=" Auto"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Button x:Name="addUserBtn" Content="关联其他账户" HorizontalAlignment="Right" Height="19" Margin="0,0,18,6" VerticalAlignment="Bottom" Width="82" Background="#FF4D5166" BorderBrush="{x:Null}" Foreground="White" Style="{StaticResource darkButton}" Padding="1" HorizontalContentAlignment="Right" FlowDirection="RightToLeft"/>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>

        <Canvas x:Name="Canvas1" HorizontalAlignment="Left" Height="627" Margin="0,38,0,0" VerticalAlignment="Top" Width="29" IsHitTestVisible="True" ClipToBounds="True" Background="#FF151519" MouseEnter="Canvas1_MouseEnter" MouseLeave="Canvas1_MouseLeave" ScrollViewer.VerticalScrollBarVisibility="Disabled" FlowDirection="RightToLeft">
            <Label x:Name="type" Content="衍生品种类：" Foreground="#FF9198AC" Width="80" FlowDirection="LeftToRight" Canvas.Left="177" Canvas.Top="40"/>
            <ComboBox x:Name="typeInStrategyPanelComboBox" VerticalAlignment="Top" IsReadOnly="True" Style="{StaticResource CboCommomStyle}" BorderBrush="#FF414551" Foreground="#FF9198AC" FlowDirection="LeftToRight" HorizontalAlignment="Left" Height="23" Width="70" Canvas.Left="79" Canvas.Top="40" >
                <ComboBoxItem x:Name="futuresInStrategyPanelComboBoxItem" Content="期货" HorizontalAlignment="Left" Width="65" Selected="futuresInStrategyPanelComboBoxItem_Selected" />
                <ComboBoxItem x:Name="optionsInStrategyPanelComboBoxItem" Content="期权" HorizontalAlignment="Left" Width="65" Selected="optionsInStrategyPanelComboBoxItem_Selected" />
            </ComboBox>
            <Canvas x:Name="strategyOfOptionsCanvas" HorizontalAlignment="Left" Height="122" Background="#FF151519" Width="234" Canvas.Left="23" Canvas.Top="79" MouseEnter="strategyOfOptionsCanvas_MouseEnter" MouseLeave="strategyOfOptionsCanvas_MouseLeave">
                <Label x:Name="traderInStrategyPanelLabel" Content="交易商：" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FF9198AC" RenderTransformOrigin="0.522,0.52" Background="{x:Null}" Canvas.Left="175" FlowDirection="LeftToRight" />
                <ComboBox x:Name="optionsTraderInStrategyPanelComboBox" HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" Style="{StaticResource CboCommomStyle}" Foreground="#FF9198AC" BorderBrush="#FF414551" FlowDirection="LeftToRight" Canvas.Left="44" >
                    <ComboBoxItem x:Name="optionsTraderInStrategyPanelComboBoxItem1" Content=" 上期所" HorizontalAlignment="Left" Width="80"/>
                    <ComboBoxItem x:Name="optionsTraderInStrategyPanelComboBoxItem2" Content=" 中金所" HorizontalAlignment="Left" Width="80"/>
                </ComboBox>
                <Label x:Name="nameInStrategyPanelLabel" Content="标的期货：" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FF9198AC" Background="{x:Null}" Canvas.Left="163" Canvas.Top="30" FlowDirection="LeftToRight" />
                <ComboBox x:Name="nameInStrategyPanelComboBox" HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" SelectedIndex="0" Style="{StaticResource CboCommomStyle}" Foreground="#FF9198AC" BorderBrush="#FF414551" FlowDirection="LeftToRight" Canvas.Left="44" Canvas.Top="30" />
                <Label x:Name="predictLabel" Content="情景预测：" Canvas.Left="153" Foreground="#FF9198AC" Width="80" FlowDirection="LeftToRight" Canvas.Top="60"/>
                <ComboBox x:Name="predictComboBox" Canvas.Left="13" Canvas.Top="62" Width="111" FlowDirection="LeftToRight"  Style="{StaticResource CboCommomStyle}" Foreground="#FF9198AC" >
                    <ComboBoxItem x:Name ="predictComboBoxItem1" Content=" 上涨" HorizontalAlignment="Left" Selected="predictComboBoxItem_Selected" />
                    <ComboBoxItem x:Name="predictComboBoxItem2" Content=" 下跌" HorizontalAlignment="Left" Selected="predictComboBoxItem2_Selected" />
                    <ComboBoxItem x:Name="predictComboBoxItem3" Content=" 波动" HorizontalAlignment="Left" Selected="predictComboBoxItem3_Selected" />
                    <ComboBoxItem x:Name="predictComboBoxItem4" Content=" 与标的物组合" HorizontalAlignment="Left" Selected="predictComboBoxItem4_Selected"  />
                </ComboBox>
                <Label x:Name="amountOfUpAndDownLabel" Content="最高涨跌幅：" Canvas.Left="154" Canvas.Top="90" Foreground="#FF9198AC" Width="80" FlowDirection="LeftToRight" Visibility="Hidden"/>
                <TextBox x:Name="amountOfUpAndDownTextBox" Height="23" Canvas.Left="70" TextWrapping="Wrap" Text="%" Canvas.Top="92" Width="54" Style="{StaticResource textboxStyle}" Visibility="Hidden" Foreground="#FF9198AC"/>
                <Label x:Name="volatilityLabel" Content="波动率：" Canvas.Left="153" Canvas.Top="90" Foreground="#FF9198AC" Width="80" FlowDirection="LeftToRight" Visibility="Hidden"/>
                <ComboBox x:Name="volatilityComboBox" FlowDirection="LeftToRight" Canvas.Left="79" Canvas.Top="92" Width="45" Height="23"  Style="{StaticResource CboCommomStyle}" Foreground="#FF9198AC" Visibility="Hidden" >
                    <ComboBoxItem Content=" 高" HorizontalAlignment="Left" />
                    <ComboBoxItem Content=" 低" HorizontalAlignment="Left" />
                </ComboBox>
            </Canvas>

            <Canvas x:Name="strategyOfFuturesCanvas" HorizontalAlignment="Left" Height="29" Background="#FF151519" Width="234" Canvas.Left="26" Canvas.Top="79" Visibility="Hidden" MouseEnter="strategyOfFuturesCanvas_MouseEnter" MouseLeave="strategyOfFuturesCanvas_MouseLeave">
                <Label x:Name="typeOfArbitrageLabel" Content=" 套利类型：" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FF9198AC" RenderTransformOrigin="0.522,0.52" Background="{x:Null}" Canvas.Left="160" FlowDirection="LeftToRight" />
                <ComboBox x:Name="typeOfArbitrageComoBox" Width="100" FlowDirection="LeftToRight"  Style="{StaticResource CboCommomStyle}" Foreground="#FF9198AC" Canvas.Left="22" Canvas.Top="2">
                    <ComboBoxItem x:Name="typeOfArbitrageComoBox1" Content=" 期权与期货" HorizontalAlignment="Left" />
                    <ComboBoxItem x:Name="typeOfArbitrageComoBox2" Content=" 期货与期货" HorizontalAlignment="Left" />
                </ComboBox>
            </Canvas>
            <Button x:Name="startStrategyBtn" Content="开始分析" Canvas.Left="102" Canvas.Top="216" Width="82" Style="{StaticResource darkButton}" Height="20" Background="#FF4D5166" BorderBrush="{x:Null}" Foreground="White"/>
        </Canvas>

        <Canvas x:Name="Canvas2" HorizontalAlignment="Right" Height="627" Margin="0,38,0,0" VerticalAlignment="Top" Width="30" IsHitTestVisible="True" ClipToBounds="True" Background="#FF14161E" MouseEnter="Canvas2_MouseEnter" MouseLeave="Canvas2_MouseLeave" FlowDirection="RightToLeft"/>


        <StatusBar x:Name="statusBar1" HorizontalAlignment="Left" Height="20" VerticalAlignment="Bottom" Width="1186" Background="#FF007ACC" Margin="0,0,0,1"/>
        <Border x:Name="Border1" BorderBrush="#FF007ACC" BorderThickness="1" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="10">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Border.RenderTransform>
        </Border>


    </Grid>
</Window>
