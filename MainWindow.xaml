<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="qiquanui.MainWindow"
        
        
        SizeChanged="Window_SizeChanged"
        Title="MainWindow" BorderThickness="7" WindowStyle="None" AllowsTransparency="True" Foreground="Black" Background="#FF1D1D21" ResizeMode="CanResizeWithGrip" MinWidth="800" MinHeight="600" Width="1200" Height="700.5" Opacity="0.95">
    <Window.Resources>
        <!--MouseDown="Window_MouseDown"         MouseMove=" Window_MouseMove"   MouseDoubleClick="Window_MouseDoubleClick"-->

        <!--实现鼠标经过渐变-->
        <!--MarketListView-->

        <Storyboard x:Key="futureMarketAnimate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(ListView.Background).(SolidColorBrush.Color)" Storyboard.TargetName="futuresMarketListView">
                <EasingColorKeyFrame KeyTime="0" Value="#FF292932"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value=" #FF353540"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="futureMarketAnimate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(ListView.Background).(SolidColorBrush.Color)" Storyboard.TargetName="futuresMarketListView">
                <EasingColorKeyFrame KeyTime="0" Value=" #FF353540"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF292932"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--Canvas1-->
        <Storyboard x:Key="canvas1Animate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Canvas1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF151519"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF050506"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="canvas1Animate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Canvas1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF050506"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF151519"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--Canvas2-->
        <Storyboard x:Key="canvas2Animate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Canvas2">
                <EasingColorKeyFrame KeyTime="0" Value="#FF151519"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF050506"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="canvas2Animate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Canvas2">
                <EasingColorKeyFrame KeyTime="0" Value="#FF050506"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF151519"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--Grid3-->
        <Storyboard x:Key="Grid3Animate">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid3">
                <EasingColorKeyFrame KeyTime="0" Value="#FF101017"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF07070A"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Grid3Animate_Leave">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Grid3">
                <EasingColorKeyFrame KeyTime="0" Value="#FF07070A"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF101017"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <!--实现鼠标经过渐变-->


        <LinearGradientBrush x:Key="Brush1" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF25112C" Offset="0"/>
            <GradientStop Color="#FF0C0C1B" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="maxSty" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\max.png" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\max_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\max_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\max_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="closeSty" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\close.png" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\close_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\close_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\close_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="minSty" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\min.png" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\min_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\min_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\min_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="normalSty" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="ImgBtnBg3" Source="Resources\normal.png" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources\normal_hover.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="Resources\normal_down.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Source" Value="Resources\normal_unable.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="darkButton" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Black"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <!--背景色-->
                        <Border x:Name="back" Opacity="0.8" CornerRadius="3">
                            <Border.BitmapEffect>
                                <OuterGlowBitmapEffect Opacity="0.7" GlowSize="0" GlowColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" />
                            </Border.BitmapEffect>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1.5">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0"/>
                                            <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0.4"/>
                                            <GradientStop Color="#FFF" Offset="1"/>
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <!--前景色及边框-->
                            <Border x:Name="fore" BorderThickness="1" CornerRadius="3" BorderBrush="#5555">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#6FFF" Offset="0.5"/>
                                                <GradientStop Color="#1111" Offset="0.51"/>
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <!--按钮内容-->
                                <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding  Content}">
                                    <ContentPresenter.BitmapEffect>
                                        <DropShadowBitmapEffect Color="#000" Direction="-90" ShadowDepth="2" Softness="0.1" Opacity="0.3" />
                                    </ContentPresenter.BitmapEffect>
                                </ContentPresenter>
                            </Border>
                        </Border>
                        <!--触发器-->
                        <ControlTemplate.Triggers>
                            <!--鼠标移入移出-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="6" Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <ColorAnimation To="#AFFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation To="#3FFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--按钮按下弹起-->
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="3" Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <ColorAnimation To="#3AAA" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation To="#2111" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--按钮失效-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#B444"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <DoubleAnimation To="1" Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)" />
                                            <DoubleAnimation To="-135" Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)" />
                                            <ColorAnimation To="#FFF" Duration="0:0:0.3" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)" />
                                            <ColorAnimation To="#D555" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                            <ColorAnimation To="#CEEE" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation To="#CDDD" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)" />
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border" Background="#FF0F1017"  BorderThickness="0" CornerRadius="0,0,0,0">
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF007ACC" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{x:Null}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF0A9DFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Simple ScrollBar  它使用了 SimpleThumb、SimpleRepeatButton 和 SimpleScrollRepeatButton -->

        <Style x:Key="SimpleScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="18"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="18"/>
                            </Grid.RowDefinitions>

                            <RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource SimpleRepeatButton}" Command="ScrollBar.LineUpCommand">
                                <Grid>
                                    <Path x:Name="DecreaseArrow" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z"/>
                                </Grid>
                            </RepeatButton>

                            <!-- Track 是一种特殊的布局容器，可调整用于在其一侧执行跳转滚动的 thumb 和 repeat button 的大小 -->
                            <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource SimpleThumbStyle}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Style="{DynamicResource SimpleScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Style="{DynamicResource SimpleScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand"/>
                                </Track.DecreaseRepeatButton>
                            </Track>

                            <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Style="{DynamicResource SimpleRepeatButton}" Command="ScrollBar.LineDownCommand">
                                <Grid>
                                    <Path x:Name="IncreaseArrow" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                </Grid>
                            </RepeatButton>
                        </Grid>

                        <!-- 它对 ScrollBar 使用一个模板，并将其旋转为“水平”
                    它还会更改命令，使其执行“向左”和“向右”命令，而不是执行“向上”和“向下”命令 -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Horizontal">

                                <!-- 将 ScrollBar 从“垂直”旋转为“水平” -->
                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>

                                <!-- Track 在内部绑定到“方向”，因此我们需要将其旋转回“垂直” -->
                                <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>

                                <!-- 更改命令，以执行“水平”命令 -->
                                <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat"/>
                                <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat"/>
                                <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown"/>
                                <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Simple ScrollViewer 
    ScrollViewer 是 Grid 控件，该控件包含 ContentPresenter 以及 Horizontal 和 Vertical ScrollBar 
    它可供 ListBox、MenuItem、ComboBox 和 TreeView 使用 -->
        <Style x:Key="SimpleScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}"/>

                            <!-- ScrollBars 的可见性通过控件的实现来控制 -->
                            <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" />
                            <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Simple ListBox - 它使用 SimpleScrollViewer 来使项滚动，并使用 SimpleListBoxItem 定义每个项的外观 -->
        <Style x:Key="SimpleListBox" TargetType="{x:Type ListBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Grid>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <ScrollViewer Margin="1" Style="{DynamicResource SimpleScrollViewer}" Focusable="false" Background="{TemplateBinding Background}">

                                <!-- StackPanel 用来显示子级，方法是将 IsItemsHost 设置为 True -->
                                <StackPanel Margin="2" IsItemsHost="true"/>

                            </ScrollViewer>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>
    <Window.Effect>
        <DropShadowEffect Direction="270" Opacity="0.75" ShadowDepth="3" BlurRadius="7" Color="#FF007ACC"/>
    </Window.Effect>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <StatusBar x:Name="statusBar1" HorizontalAlignment="Left" Height="20" VerticalAlignment="Bottom" Width="1186" Background="#FF007ACC" Margin="0,0,0,1"/>

        <Frame x:Name="Top1" Content="" HorizontalAlignment="Left" Height="38" VerticalAlignment="Top" Width="1186" Background="#FF1B1B1F" MouseDown="Top1_MouseDown" MouseMove="Top1_MouseMove" MouseDoubleClick="Top1_MouseDoubleClick"/>

        <ListView x:Name="futuresMarketListView" Height="287" Margin="29,38,0,0" Width="1127" Background="#FF292932" BorderBrush="{x:Null}" BorderThickness="0" HorizontalAlignment="Left" VerticalAlignment="Top" MouseEnter="futuresMarketListView_MouseEnter" MouseLeave="futuresMarketListView_MouseLeave">
            <ListView.View>
                <GridView AllowsColumnReorder="False">
                    <!-- 不允许列重新排序-->
                    <GridViewColumn Header=" 名称" Width=" 100"/>
                    <GridViewColumn Header=" 最新价格" Width=" 100"/>
                    <GridViewColumn Header=" 成交量" Width=" 100"/>
                    <GridViewColumn Header=" 卖价" Width=" 100"/>
                    <GridViewColumn Header=" 买价" Width=" 100"/>
                    <GridViewColumn Header=" 涨跌" Width=" 100"/>
                    <GridViewColumn Header=" 涨跌幅度" Width=" 100"/>
                    <GridViewColumn Header=" 买/卖量" Width=" 100"/>
                </GridView>
            </ListView.View>
        </ListView>

        <ListView x:Name="optionsMarketListView" Height="287" VerticalAlignment="Top" HorizontalAlignment="Left" Width="808" Margin="37,38,0,0" Visibility="Hidden" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0" Foreground="{x:Null}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header=" 买价" Width=" 80" />
                    <GridViewColumn Header=" 卖价" Width=" 80"/>
                    <GridViewColumn Header=" 最新价" Width=" 80"/>
                    <GridViewColumn Header=" 现量" Width=" 80"/>
                    <GridViewColumn Header=" 成交量" Width=" 80"/>
                    <GridViewColumn Header=" 行权价" Width=" 80"/>
                    <GridViewColumn Header=" 成交量" Width=" 80"/>
                    <GridViewColumn Header=" 现量" Width=" 80"/>
                    <GridViewColumn Header=" 最新价" Width=" 80"/>
                    <GridViewColumn Header=" 卖价" Width=" 80"/>
                    <GridViewColumn Header=" 买价" Width=" 80"/>
                </GridView>
            </ListView.View>
        </ListView>
        <Grid x:Name="Grid3" HorizontalAlignment="Left" Height="308" Margin="29,0,0,21" VerticalAlignment="Bottom" Width="915" Background="#FF101017" MouseEnter="Grid3_MouseEnter" MouseLeave="Grid3_MouseLeave">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TabControl x:Name="multipleTabControl" HorizontalAlignment="Left" Height="346" VerticalAlignment="Top" Width="915" BorderBrush="{x:Null}" Background="{x:Null}" Margin="0,-35,0,-3">
                <TabItem Header="交易区" Foreground="White"  Style="{StaticResource TabItemStyle}" Margin="-2,6,2,-10">
                    <Grid Margin="-4,0,-3,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ListView x:Name="optionsTradingListView" HorizontalAlignment="Left" Height="301" VerticalAlignment="Top" Width="1161" Background="{x:Null}" BorderBrush="#FF0176C9" BorderThickness="0,3,0,0" Margin="-4,7,0,0" SelectionChanged="optionsTradingListView_SelectionChanged">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="合约名称 " Width="100"/>
                                    <GridViewColumn Header="合约类型 " Width="80">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate>
                                                <ComboBox x:Name="typeOfOptionsComboBox">
                                                    <System:String>看涨期权</System:String>
                                                    <System:String>看跌期权</System:String>
                                                </ComboBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="行权价 " Width="80"/>
                                    <GridViewColumn Header=" 交易类型" Width="60">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate>
                                                <ComboBox x:Name="typeOfTradingComboBox">
                                                    <System:String>买</System:String>
                                                    <System:String>卖</System:String>
                                                    <System:String>开</System:String>
                                                    <System:String>平</System:String>
                                                </ComboBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header=" 交易手数" Width="60">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate >
                                                <ListBox />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header=" 委托方式" Width=" 60">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate>
                                                <ComboBox x:Name="typeOfPendingOrderComboBox">
                                                    <System:String>ROD FOK IOC</System:String>
                                                </ComboBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header=" 委托价格" Width=" 80">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBox x:Name="priceOfPendingOrderTextBox" Text=" " Width=" 80"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header=" 市场价格" Width=" 80"/>
                                    <GridViewColumn Header=" 有效期" Width=" 100"/>
                                    <GridViewColumn Header=" 设置梯度" Width=" 60">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <CheckBox />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header=" 精确度" Width=" 50">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBox x:Name="accuracyTextBox" Text=" " Width=" 50"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="手数等差 " Width=" Auto">
                                        <GridViewColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBox x:Name="arithmeticProgressionTextBox" Text=" " Width=" 60"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </TabItem>
                <TabItem Header="持仓" Background="White" Style="{StaticResource TabItemStyle}" Foreground="White" BorderBrush="{x:Null}" BorderThickness="0" Margin="-2,6,2,-10">
                    <Grid Margin="-4,0,-3,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ListView x:Name="optionsHoldDetailListView" HorizontalAlignment="Left" Height="298" VerticalAlignment="Top" Width="919" BorderBrush="#FF0176C9" Background="{x:Null}" BorderThickness="0,3,0,0" Foreground="White" Margin="-3,7,0,0" >
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header=" 交易所"/>
                                    <GridViewColumn Header=" 品种"/>
                                    <GridViewColumn Header=" 交割期"/>
                                    <GridViewColumn Header=" 开仓日期"/>
                                    <GridViewColumn Header=" 投/保"/>
                                    <GridViewColumn Header=" 买/卖"/>
                                    <GridViewColumn Header=" 持仓量"/>
                                    <GridViewColumn Header=" 开仓价"/>
                                    <GridViewColumn Header=" 昨结算"/>
                                    <GridViewColumn Header=" 结算价"/>
                                    <GridViewColumn Header=" 浮动盈亏"/>
                                    <GridViewColumn Header=" 盯市盈亏"/>
                                    <GridViewColumn Header=" 保证金"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </TabItem>
                <TabItem Header="历史记录" Foreground="White"  Style="{StaticResource TabItemStyle}" Margin="-2,6,2,-10">
                    <Grid Margin="-4,0,-3,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1161"/>
                        </Grid.ColumnDefinitions>

                        <ListView x:Name="historyListView" HorizontalAlignment="Left" Height="270" VerticalAlignment="Top" Width="1158" Background="{x:Null}" BorderBrush="#FF0176C9" BorderThickness="0,3,0,0" Margin="0,7,0,0">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header=" 衍生品名称"/>
                                    <GridViewColumn Header=" 交易时间"/>
                                    <GridViewColumn Header=" 交易类型"/>
                                    <GridViewColumn Header=" 挂单手数"/>
                                    <GridViewColumn Header=" 成交手数"/>
                                    <GridViewColumn Header=" 挂单价格"/>
                                    <GridViewColumn Header=" 成交价格"/>
                                    <GridViewColumn Header=" 价格条件"/>
                                    <GridViewColumn Header=" 有效期"/>
                                    <GridViewColumn Header=" 挂单状态"/>
                                    <GridViewColumn Header=" 投资者"/>
                                    <GridViewColumn Header=" 开平"/>
                                    <GridViewColumn Header=" 触价"/>
                                    <GridViewColumn Header=" 当冲"/>
                                    <GridViewColumn Header=" 外部指示"/>
                                    <GridViewColumn Header=" 日期"/>
                                    <GridViewColumn Header=" 交易员"/>
                                    <GridViewColumn Header=" 交易单号"/>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <CheckBox x:Name="optionsCheckBox" Content="仅显示期权交易明细" HorizontalAlignment="Right" Margin="0,0,421,11" VerticalAlignment="Bottom" Foreground="White" FlowDirection="RightToLeft" HorizontalContentAlignment="Right" VerticalContentAlignment="Bottom"/>
                        <CheckBox x:Name="futuresCheckBox" Content="仅显示期货交易明细" HorizontalAlignment="Right" Margin="0,0,276,11" VerticalAlignment="Bottom" Foreground="White" FlowDirection="RightToLeft" HorizontalContentAlignment="Right" VerticalContentAlignment="Bottom"/>
                    </Grid>
                </TabItem>
                <TabItem Header="账户管理"  Style="{StaticResource TabItemStyle}" Foreground="White" Margin="-2,6,2,-10">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <ListView x:Name="userManageListView" HorizontalAlignment="Left" Height="273" VerticalAlignment="Top" Width="918"  Background="{x:Null}" BorderBrush="#FF0176C9" BorderThickness="0,3,0,0" Margin="-4,7,-5,0" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header=" 账户名称" Width=" 100"/>
                                    <GridViewColumn Header=" 登录状态" Width=" 70"/>
                                    <GridViewColumn Header=" 总资产" Width=" Auto"/>
                                    <GridViewColumn Header=" 最新资产" Width=" Auto"/>
                                    <GridViewColumn Header=" 可用资金" Width=" Auto"/>
                                    <GridViewColumn Header=" 浮动盈亏" Width=" Auto"/>
                                    <GridViewColumn Header=" 平仓盈亏" Width=" Auto"/>
                                    <GridViewColumn Header=" 上日结存" Width=" Auto"/>
                                    <GridViewColumn Header=" 买冻结" Width=" Auto"/>
                                    <GridViewColumn Header=" 卖冻结" Width=" Auto"/>
                                    <GridViewColumn Header=" 冻结金额" Width=" Auto"/>
                                    <GridViewColumn Header=" 当日出入金" Width=" Auto"/>
                                    <GridViewColumn Header=" 买保证金" Width=" Auto"/>
                                    <GridViewColumn Header=" 卖保证金" Width=" Auto"/>
                                    <GridViewColumn Header=" 保证金" Width=" Auto"/>
                                    <GridViewColumn Header=" 信用金额" Width=" Auto"/>
                                    <GridViewColumn Header=" 动态权益" Width=" Auto"/>
                                    <GridViewColumn Header=" 动态风险" Width=" Auto"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Button x:Name="addUserBtn" Content="关联其他账户" HorizontalAlignment="Right" Height="19" Margin="0,0,10,10" VerticalAlignment="Bottom" Width="82" Background="#FF4D5166" BorderBrush="{x:Null}" Foreground="White" Style="{StaticResource darkButton}" Padding="1" HorizontalContentAlignment="Right" FlowDirection="RightToLeft"/>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
        <Button x:Name="minButton" Margin="0,11,51,0" Click="MinButton_Click_1" Focusable="False" Height="12" Width="15" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource minSty}"/>
        <Button x:Name="maxButton" Margin="0,12,31,0" Click="MaxButton_Click_1" Focusable="False" Height="12" Width="15" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource maxSty}"/>
        <Button x:Name="closeButton" Margin="0,11,10,0" Click="CloseButton_Click_1" Focusable="False" Height="12" Width="15" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource closeSty}"/>
        <Canvas x:Name="Canvas1" HorizontalAlignment="Left" Height="627" Margin="0,38,0,0" VerticalAlignment="Top" Width="29" IsHitTestVisible="True" ClipToBounds="True" Background="#FF151519" MouseEnter="Canvas1_MouseEnter" MouseLeave="Canvas1_MouseLeave" ScrollViewer.VerticalScrollBarVisibility="Disabled" FlowDirection="RightToLeft">
            <Image HorizontalAlignment="Right" Height="35" VerticalAlignment="Top" Width="53" Source="Resources\kanzhang.png" Canvas.Top="37" Canvas.Left="32" ToolTip="看涨策略" FlowDirection="RightToLeft" ScrollViewer.CanContentScroll="True" UseLayoutRounding="True"/>
            <Image HorizontalAlignment="Right" Height="35" VerticalAlignment="Top" Width="53" Source="Resources\kandie.png" Canvas.Left="32" Canvas.Top="93" ToolTip="看跌策略" FlowDirection="RightToLeft" ScrollViewer.CanContentScroll="True" UseLayoutRounding="True"/>
            <Image HorizontalAlignment="Right" Height="35" VerticalAlignment="Top" Width="53" Source="Resources\kuankuashi.png" Canvas.Left="32" Canvas.Top="202" ToolTip="宽跨式策略" FlowDirection="RightToLeft" ScrollViewer.CanContentScroll="True" UseLayoutRounding="True" RenderTransformOrigin="0.264,0.543"/>
            <Image HorizontalAlignment="Right" Height="35" VerticalAlignment="Top" Width="53" Source="Resources\dieshi.png" Canvas.Left="32" Canvas.Top="268" ToolTip="蝶式策略" FlowDirection="RightToLeft" ScrollViewer.CanContentScroll="True" UseLayoutRounding="True"/>
            <Image HorizontalAlignment="Right" Height="35" VerticalAlignment="Top" Width="53" Source="Resources\kuashi.png" Canvas.Left="32" Canvas.Top="151" ToolTip="跨式策略" FlowDirection="RightToLeft" ScrollViewer.CanContentScroll="True" UseLayoutRounding="True"/>
        </Canvas>
        <Canvas x:Name="Canvas2" HorizontalAlignment="Right" Height="627" Margin="0,38,0,0" VerticalAlignment="Top" Width="30" IsHitTestVisible="True" ClipToBounds="True" Background="#FF14161E" MouseEnter="Canvas2_MouseEnter" MouseLeave="Canvas2_MouseLeave" FlowDirection="RightToLeft">

        </Canvas>
        <Border x:Name="Border1" BorderBrush="#FF007ACC" BorderThickness="1" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Border.RenderTransform>
        </Border>

    </Grid>
</Window>
